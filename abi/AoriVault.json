{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aoriProtocol",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Call",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "inputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "inputZone",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "outputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "outputZone",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "toWithdraw",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAoriV2.Order",
              "name": "makerOrder",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "inputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "inputZone",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "outputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "outputZone",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "toWithdraw",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAoriV2.Order",
              "name": "takerOrder",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerSignature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "blockDeadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "seatNumber",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seatHolder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "seatPercentOfFees",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAoriV2.MatchingDetails",
          "name": "matching",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "hookData",
          "type": "bytes"
        }
      ],
      "name": "afterAoriTrade",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "inputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "inputZone",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "outputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "outputZone",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "toWithdraw",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAoriV2.Order",
              "name": "makerOrder",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "inputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "inputZone",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "outputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "outputZone",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "toWithdraw",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAoriV2.Order",
              "name": "takerOrder",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerSignature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "blockDeadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "seatNumber",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seatHolder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "seatPercentOfFees",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAoriV2.MatchingDetails",
          "name": "matching",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "hookData",
          "type": "bytes"
        }
      ],
      "name": "beforeAoriTrade",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Instruction[]",
          "name": "instructions",
          "type": "tuple[]"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "managers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6080346100b157601f6111fb38819003918201601f19168301916001600160401b038311848410176100b65780849260409485528339810103126100b157610052602061004b836100cc565b92016100cc565b9060018060a01b038091169160018060a01b031992600090808583541617825581526001602052600160408083209260ff1993838582541617905530815220918254161790551690600254161760025560405161111a90816100e18239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100b15756fe60806040526004361015610018575b361561001657005b005b6000803560e01c90816301ffc9a7146100bb5750806309cae2c8146100b25780631626ba7e146100a95780633f707e6b146100a05780637ad28a5914610097578063a5e90eee1461008e578063a9cfc240146100855763fdff9b4d0361000e57610080610843565b61000e565b50610080610828565b506100806106fe565b506100806106cf565b50610080610559565b506100806104d2565b506100806101e9565b3461017a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017a57600435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361017a57507f7ad28a59000000000000000000000000000000000000000000000000000000008114908115610150575b50151560805260206080f35b7fa9cfc2400000000000000000000000000000000000000000000000000000000091501481610144565b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101a057565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036101a057565b359073ffffffffffffffffffffffffffffffffffffffff821682036101a057565b50346101a05760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05761022161017d565b61032873ffffffffffffffffffffffffffffffffffffffff6102416101a5565b9261027e6102796102723373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b5460ff1690565b611035565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260209485939192909116908383602481855afa92831561039b575b60009361036c575b5060006040518096819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1801561035f575b61033957005b8161001692903d10610358575b6103508183610401565b8101906110cf565b503d610346565b610367610bf9565b610333565b61038d919350843d8611610394575b6103858183610401565b8101906110c0565b91386102cd565b503d61037b565b6103a3610bf9565b6102c5565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176103f457604052565b6103fc6103a8565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176103f457604052565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff811161047e575b01160190565b6104866103a8565b610478565b81601f820112156101a0578035906104a282610442565b926104b06040519485610401565b828452602083830101116101a057816000926020809301838601378301015290565b50346101a05760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05760243567ffffffffffffffff81116101a05761052f610527602092369060040161048b565b600435610c06565b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05760043567ffffffffffffffff8082116101a057366023830112156101a05781600401359081116101a0573660248260051b840101116101a05733600052600160205260ff60406000205416156105eb57610016916105e6916024369201610939565b610f2c565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f6e6c792061206d616e616765722063616e20657865637574650000000000006044820152fd5b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906040828401126101a05760043567ffffffffffffffff928382116101a0576104409082860301126101a05760040192602435908382116101a057806023830112156101a05781600401359384116101a057602484830101116101a0576024019190565b50346101a05760206106ea6106e336610649565b9150610a57565b6040519015158152f35b801515036101a057565b50346101a05760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05761073661017d565b602435610742816106f4565b73ffffffffffffffffffffffffffffffffffffffff806000541633036107a4576100169216600052600160205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60448201527f6e000000000000000000000000000000000000000000000000000000000000006064820152fd5b50346101a05760206106ea61083c36610649565b9150610b3d565b50346101a05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05773ffffffffffffffffffffffffffffffffffffffff61089061017d565b166000526001602052602060ff604060002054166040519015158152f35b156108b557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4f6e6c792061206d616e616765722063616e20666f726365207468652065786560448201527f637574696f6e206f6620746869732074726164650000000000000000000000006064820152fd5b9291909267ffffffffffffffff8085116109e9575b8460051b6040938451946020809661096882860182610401565b8099815201928501948286116101a05780935b86851061098c575050505050505050565b84358681116101a05782016060818603126101a0578351916109ad836103d8565b6109b6826101c8565b8352898201358a84015284820135928884116101a0576109da878c9586950161048b565b8682015281520194019361097b565b6109f16103a8565b61094e565b9080601f830112156101a057816020610a1193359101610939565b90565b9190916040818403126101a05767ffffffffffffffff9281358481116101a05781610a409184016109f6565b9360208301359081116101a057610a1192016109f6565b908015610b3657326000526001602052610a7860ff604060002054166108ae565b73ffffffffffffffffffffffffffffffffffffffff600254163303610ab25781610aa791610aad930190610a14565b50610f2c565b600190565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f4f6e6c7920616f726950726f746f636f6c2063616e20696e746572616374207760448201527f697468207468697320636f6e74726163740000000000000000000000000000006064820152fd5b5050600190565b908015610b3657326000526001602052610b5e60ff604060002054166108ae565b73ffffffffffffffffffffffffffffffffffffffff600254163303610b945781610b8d91610aad930190610a14565b9050610f2c565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c7920616f726950726f746f636f6c2063616e20747261646500000000006044820152fd5b156101a057565b506040513d6000823e3d90fd5b6020610d0692610c196041825114610bf2565b818101519060606040820151910151916000958693841a9285858589610c608588604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15610dbb575b845196604051610cdc81610cb08a82019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610401565b51902092604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15610dae575b610d4461027283519273ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b908115610d79575b50610d545790565b507f1626ba7e0000000000000000000000000000000000000000000000000000000090565b610da891506102729073ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b38610d4c565b610db6610bf9565b610d15565b610dc3610bf9565b610c6f565b8051821015610ddc5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b3d15610e36573d90610e1c82610442565b91610e2a6040519384610401565b82523d6000602084013e565b606090565b15610e4257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f43616c6c20746f2065787465726e616c2066756e6374696f6e206661696c65646044820152fd5b919073ffffffffffffffffffffffffffffffffffffffff90949394168252602090818301526060604083015283519384606084015260005b858110610f18575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006080809697860101520116010190565b818101830151848201608001528201610ed8565b80519060005b828110610f3e57505050565b7f58920bab8ebe20f458895b68243189a021c51741421c3d98eff715b8e5afe1fa610f87610f6c8385610dc8565b515173ffffffffffffffffffffffffffffffffffffffff1690565b602090610fd482610f988688610dc8565b510151926040610fca60008083610faf8b8d610dc8565b51015194855190860189895af1610fc4610e0b565b50610e3b565b5193849384610ea0565b0390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461100657600101610f32565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b1561103c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4f6e6c79206f776e6572206f72207468697320636f6e74726163742063616e2060448201527f65786563757465000000000000000000000000000000000000000000000000006064820152fd5b908160209103126101a0575190565b908160209103126101a05751610a11816106f456fea2646970667358221220dfa59a9976f6df787923f9afa387faab85544230bc7e94ac50e5c56b4aa92b1a64736f6c63430008110033",
    "sourceMap": "311:3736:0:-:0;;;;;;;;;;;;;-1:-1:-1;;311:3736:0;;;;-1:-1:-1;;;;;311:3736:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;311:3736:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1154:4:1;311:3736:0;;;;;;;;;;;;996:28;311:3736;;;996:28;311:3736;;;;;;;;;;;-1:-1:-1;311:3736:0;;;;;;-1:-1:-1;311:3736:0;;;;;-1:-1:-1;311:3736:0;;;;-1:-1:-1;;;;;311:3736:0;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610018575b361561001657005b005b6000803560e01c90816301ffc9a7146100bb5750806309cae2c8146100b25780631626ba7e146100a95780633f707e6b146100a05780637ad28a5914610097578063a5e90eee1461008e578063a9cfc240146100855763fdff9b4d0361000e57610080610843565b61000e565b50610080610828565b506100806106fe565b506100806106cf565b50610080610559565b506100806104d2565b506100806101e9565b3461017a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017a57600435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361017a57507f7ad28a59000000000000000000000000000000000000000000000000000000008114908115610150575b50151560805260206080f35b7fa9cfc2400000000000000000000000000000000000000000000000000000000091501481610144565b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101a057565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036101a057565b359073ffffffffffffffffffffffffffffffffffffffff821682036101a057565b50346101a05760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05761022161017d565b61032873ffffffffffffffffffffffffffffffffffffffff6102416101a5565b9261027e6102796102723373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b5460ff1690565b611035565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260209485939192909116908383602481855afa92831561039b575b60009361036c575b5060006040518096819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1801561035f575b61033957005b8161001692903d10610358575b6103508183610401565b8101906110cf565b503d610346565b610367610bf9565b610333565b61038d919350843d8611610394575b6103858183610401565b8101906110c0565b91386102cd565b503d61037b565b6103a3610bf9565b6102c5565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176103f457604052565b6103fc6103a8565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176103f457604052565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff811161047e575b01160190565b6104866103a8565b610478565b81601f820112156101a0578035906104a282610442565b926104b06040519485610401565b828452602083830101116101a057816000926020809301838601378301015290565b50346101a05760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05760243567ffffffffffffffff81116101a05761052f610527602092369060040161048b565b600435610c06565b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05760043567ffffffffffffffff8082116101a057366023830112156101a05781600401359081116101a0573660248260051b840101116101a05733600052600160205260ff60406000205416156105eb57610016916105e6916024369201610939565b610f2c565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f6e6c792061206d616e616765722063616e20657865637574650000000000006044820152fd5b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906040828401126101a05760043567ffffffffffffffff928382116101a0576104409082860301126101a05760040192602435908382116101a057806023830112156101a05781600401359384116101a057602484830101116101a0576024019190565b50346101a05760206106ea6106e336610649565b9150610a57565b6040519015158152f35b801515036101a057565b50346101a05760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05761073661017d565b602435610742816106f4565b73ffffffffffffffffffffffffffffffffffffffff806000541633036107a4576100169216600052600160205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60448201527f6e000000000000000000000000000000000000000000000000000000000000006064820152fd5b50346101a05760206106ea61083c36610649565b9150610b3d565b50346101a05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05773ffffffffffffffffffffffffffffffffffffffff61089061017d565b166000526001602052602060ff604060002054166040519015158152f35b156108b557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4f6e6c792061206d616e616765722063616e20666f726365207468652065786560448201527f637574696f6e206f6620746869732074726164650000000000000000000000006064820152fd5b9291909267ffffffffffffffff8085116109e9575b8460051b6040938451946020809661096882860182610401565b8099815201928501948286116101a05780935b86851061098c575050505050505050565b84358681116101a05782016060818603126101a0578351916109ad836103d8565b6109b6826101c8565b8352898201358a84015284820135928884116101a0576109da878c9586950161048b565b8682015281520194019361097b565b6109f16103a8565b61094e565b9080601f830112156101a057816020610a1193359101610939565b90565b9190916040818403126101a05767ffffffffffffffff9281358481116101a05781610a409184016109f6565b9360208301359081116101a057610a1192016109f6565b908015610b3657326000526001602052610a7860ff604060002054166108ae565b73ffffffffffffffffffffffffffffffffffffffff600254163303610ab25781610aa791610aad930190610a14565b50610f2c565b600190565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f4f6e6c7920616f726950726f746f636f6c2063616e20696e746572616374207760448201527f697468207468697320636f6e74726163740000000000000000000000000000006064820152fd5b5050600190565b908015610b3657326000526001602052610b5e60ff604060002054166108ae565b73ffffffffffffffffffffffffffffffffffffffff600254163303610b945781610b8d91610aad930190610a14565b9050610f2c565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c7920616f726950726f746f636f6c2063616e20747261646500000000006044820152fd5b156101a057565b506040513d6000823e3d90fd5b6020610d0692610c196041825114610bf2565b818101519060606040820151910151916000958693841a9285858589610c608588604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15610dbb575b845196604051610cdc81610cb08a82019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610401565b51902092604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15610dae575b610d4461027283519273ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b908115610d79575b50610d545790565b507f1626ba7e0000000000000000000000000000000000000000000000000000000090565b610da891506102729073ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b38610d4c565b610db6610bf9565b610d15565b610dc3610bf9565b610c6f565b8051821015610ddc5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b3d15610e36573d90610e1c82610442565b91610e2a6040519384610401565b82523d6000602084013e565b606090565b15610e4257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f43616c6c20746f2065787465726e616c2066756e6374696f6e206661696c65646044820152fd5b919073ffffffffffffffffffffffffffffffffffffffff90949394168252602090818301526060604083015283519384606084015260005b858110610f18575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006080809697860101520116010190565b818101830151848201608001528201610ed8565b80519060005b828110610f3e57505050565b7f58920bab8ebe20f458895b68243189a021c51741421c3d98eff715b8e5afe1fa610f87610f6c8385610dc8565b515173ffffffffffffffffffffffffffffffffffffffff1690565b602090610fd482610f988688610dc8565b510151926040610fca60008083610faf8b8d610dc8565b51015194855190860189895af1610fc4610e0b565b50610e3b565b5193849384610ea0565b0390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461100657600101610f32565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b1561103c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4f6e6c79206f776e6572206f72207468697320636f6e74726163742063616e2060448201527f65786563757465000000000000000000000000000000000000000000000000006064820152fd5b908160209103126101a0575190565b908160209103126101a05751610a11816106f456fea2646970667358221220dfa59a9976f6df787923f9afa387faab85544230bc7e94ac50e5c56b4aa92b1a64736f6c63430008110033",
    "sourceMap": "311:3736:0:-:0;;;;;;;;;-1:-1:-1;311:3736:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3918:51;3934:35;3918:51;;3917:121;;;;;311:3736;;;;;;;;;3917:121;4003:34;3987:50;;;3917:121;;;311:3736;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;2469:73:1;311:3736:0;;;:::i;:::-;2404:10:1;2387:72;2395:20;;2404:10;311:3736:0;;;;2395:8:1;311:3736:0;;;;;;;2395:20:1;311:3736:0;;;;;2395:20:1;2387:72;:::i;:::-;311:3736:0;;;2503:38:1;;2535:4;311:3736:0;2503:38:1;;311:3736:0;;;;;;;;;;;;;;;;2503:38:1;;;;;;;311:3736:0;-1:-1:-1;2503:38:1;;;311:3736:0;;-1:-1:-1;311:3736:0;;2469:73:1;;;;;;311:3736:0;2469:73:1;;311:3736:0;2469:73:1;;311:3736:0;;;;;;;;;;;;;;;;;2469:73:1;;;;;;;;;311:3736:0;2469:73:1;;311:3736:0;2469:73:1;;;;;;-1:-1:-1;2469:73:1;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;2503:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;311:3736:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;311:3736:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:10:1;-1:-1:-1;311:3736:0;1460:8:1;311:3736:0;;;;-1:-1:-1;311:3736:0;;;;;;1521:22:1;311:3736:0;;;;;;;;:::i;:::-;1521:22:1;:::i;311:3736:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;-1:-1:-1;311:3736:0;;2827:10:1;2818:19;311:3736:0;;2885:31:1;311:3736:0;;-1:-1:-1;311:3736:0;2885:8:1;311:3736:0;;;-1:-1:-1;311:3736:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;311:3736:0;487:41:1;311:3736:0;;;;;-1:-1:-1;311:3736:0;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;1215:557::-;;1346:20;;1342:62;;1431:9;1365:1;311:3736;1422:8;311:3736;;1414:84;311:3736;;1365:1;311:3736;;;1414:84;:::i;:::-;311:3736;1530:12;311:3736;;1516:10;:26;311:3736;;1653:52;;;1724:19;1653:52;;;;:::i;:::-;1724:19;;:::i;:::-;1422:8;1215:557;:::o;311:3736::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1342:62;1382:11;;1389:4;1382:11;:::o;1778:537::-;;1908:20;;1904:62;;1993:9;1927:1;311:3736;1984:8;311:3736;;1976:84;311:3736;;1927:1;311:3736;;;1976:84;:::i;:::-;311:3736;2092:12;311:3736;;2078:10;:26;311:3736;;2195:52;;;2266:20;2195:52;;;;:::i;:::-;2266:20;;;:::i;311:3736::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;2501:1127;2754:310;3232:191;2501:1127;2606:32;2635:2;311:3736;;2614:23;2606:32;:::i;:::-;2754:310;;;;;;;;;;;;;-1:-1:-1;;2754:310:0;;;;;311:3736;;;;;3098:25;311:3736;;2754:310;311:3736;3098:25;;;;311:3736;;;;;;;;;;;;;;;;;;;;;;;;;3098:25;;;;;;;;;;;;2501:1127;3098:25;;311:3736;2754:310;311:3736;3282:117;;;;;;;;311:3736;;;;;;;;;;;;3282:117;;;;;;;;;:::i;:::-;311:3736;3255:158;;311:3736;2754:310;311:3736;3232:191;;;;311:3736;;;;;;;;;;;;;;;;;;;;;;;;;3232:191;;;;;;3098:25;3232:191;;;;;2501:1127;3499:23;;3232:191;;3499:23;311:3736;;;;3098:25;311:3736;;;;;;;3499:23;:50;;;;;2501:1127;3495:106;;;2501:1127;:::o;3495:106::-;3565:25;311:3736;3565:25;:::o;3499:50::-;3526:23;;;;;311:3736;;;;3098:25;311:3736;;;;;;;3526:23;3499:50;;;3232:191;;;:::i;:::-;;;3098:25;;;:::i;:::-;;;311:3736;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;311:3736:0;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;1556:572:1;311:3736:0;;1693:9:1;-1:-1:-1;1704:10:1;;;;;;1556:572;;;:::o;1716:3::-;2089:22;1748:18;:15;;;;:::i;:::-;;311:3736:0;;;;;1748:18:1;1796:21;:15;2089:22;1796:15;;;;;:::i;:::-;;:21;311:3736:0;1852:20:1;;2018:52;-1:-1:-1;1852:15:1;;;;;;:::i;:::-;;:20;;1976:28;;;;;;;;;;;;:::i;:::-;;2018:52;:::i;:::-;311:3736:0;2089:22:1;;;;;:::i;:::-;;;;311:3736:0;;;;;;;1693:9:1;;311:3736:0;;-1:-1:-1;311:3736:0;;;;;-1:-1:-1;311:3736:0;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "afterAoriTrade(((address,address,uint256,uint256,address,address,uint256,uint256,address,uint256,uint256,uint256,uint256,bool),(address,address,uint256,uint256,address,address,uint256,uint256,address,uint256,uint256,uint256,uint256,bool),bytes,bytes,uint256,uint256,address,uint256),bytes)": "a9cfc240",
    "beforeAoriTrade(((address,address,uint256,uint256,address,address,uint256,uint256,address,uint256,uint256,uint256,uint256,bool),(address,address,uint256,uint256,address,address,uint256,uint256,address,uint256,uint256,uint256,uint256,bool),bytes,bytes,uint256,uint256,address,uint256),bytes)": "7ad28a59",
    "execute((address,uint256,bytes)[])": "3f707e6b",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "managers(address)": "fdff9b4d",
    "setManager(address,bool)": "a5e90eee",
    "supportsInterface(bytes4)": "01ffc9a7",
    "withdrawAll(address,address)": "09cae2c8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aoriProtocol\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Call\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputZone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outputZone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"toWithdraw\",\"type\":\"bool\"}],\"internalType\":\"struct IAoriV2.Order\",\"name\":\"makerOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputZone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outputZone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"toWithdraw\",\"type\":\"bool\"}],\"internalType\":\"struct IAoriV2.Order\",\"name\":\"takerOrder\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"blockDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seatHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seatPercentOfFees\",\"type\":\"uint256\"}],\"internalType\":\"struct IAoriV2.MatchingDetails\",\"name\":\"matching\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAoriTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputZone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outputZone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"toWithdraw\",\"type\":\"bool\"}],\"internalType\":\"struct IAoriV2.Order\",\"name\":\"makerOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputZone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outputZone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"toWithdraw\",\"type\":\"bool\"}],\"internalType\":\"struct IAoriV2.Order\",\"name\":\"takerOrder\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"blockDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seatHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seatPercentOfFees\",\"type\":\"uint256\"}],\"internalType\":\"struct IAoriV2.MatchingDetails\",\"name\":\"matching\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeAoriTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Instruction[]\",\"name\":\"instructions\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"managers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isManager\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AoriVault.sol\":\"AoriVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":LayerZero-v2/=lib/aori-v2-contracts/lib/LayerZero-v2/\",\":aori-v2-contracts/=lib/aori-v2-contracts/\",\":create3-factory/=lib/create3-factory/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":seaport-types/=lib/seaport-types/\",\":solmate/=lib/aori-v2-contracts/lib/solmate/src/\",\":weird-erc20/=lib/aori-v2-contracts/lib/solmate/lib/weird-erc20/src/\"],\"viaIR\":true},\"sources\":{\"contracts/AoriVault.sol\":{\"keccak256\":\"0x13d18b7ecf0a7fa47e8156a06cc498618b544b761654eee0cc7075cc93c2d671\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f4851a02ab757c9969704bec85c8884d867a651e2c191735c1e5627da4d0896e\",\"dweb:/ipfs/QmZCjFpfXvBwEinVdLKGucHwkZ2PPUEMa7M19PRNjPWwdy\"]},\"contracts/BatchExecutor.sol\":{\"keccak256\":\"0x0888796c720f607efd810f8b2c8bfb7ebf8cc2624849eee4edb5d9e126276bc1\",\"urls\":[\"bzz-raw://bcc633bbdcac51482f42ea8b485152ef884fdae68ca1a9579cdbe3c19cedf7a3\",\"dweb:/ipfs/QmbCpju6pKKGqW9zLYNnV7zaaeAU5h1N6kXuPuNXxzr9JQ\"]},\"contracts/adapters/BalancerLoanReceiver.sol\":{\"keccak256\":\"0x5f29d50e57e3a048ce3b90cee22a2aabbeebf5055e8ae764ffb410d4088f2206\",\"urls\":[\"bzz-raw://05a9d15f62be8fdb7e1bf7e674fe340dbc203079cc1da57d5dc49e8e34fe6259\",\"dweb:/ipfs/QmVqGcBrVFV1jU7aTri5L9k5K2sjqJMdr9rdK68u55QSzT\"]},\"contracts/interfaces/IAoriVault.sol\":{\"keccak256\":\"0xf2a0fd7076fd916fb8c777be5845bf976dc7724fed22a0c6a46d793f44fcbeba\",\"urls\":[\"bzz-raw://053eb93eb95a902a5e63d418d43bc6e28fe376185726a62ec6fbece1f84a011a\",\"dweb:/ipfs/QmbDicQFWsvVLnB6WKqXQd8N5GofSDdcKbkMzeY1GYYpRJ\"]},\"contracts/interfaces/IBatchExecutor.sol\":{\"keccak256\":\"0x195aa243c1befdf3db3dc154e23a239339ddb0ec9aca06f02ac14eab89f4050b\",\"urls\":[\"bzz-raw://6660feb81655afb3c2cd62f482daccb8d344f0adf28bd0ee190b37705cad3181\",\"dweb:/ipfs/QmWDNHNUiV4ZfKct7xJKc91FmLeesAp8u3akXiQT1GUHDG\"]},\"lib/aori-v2-contracts/src/interfaces/IAoriHook.sol\":{\"keccak256\":\"0xc4bd7a35c6e514ba22c3160868928924f22b9df3ab0f5c3ebbb3ebb039361c6b\",\"urls\":[\"bzz-raw://d8b5fff115f14c357863df196ace76eb7474fd59d70a63bfe201e67328309ce5\",\"dweb:/ipfs/QmaiFSvvvm1pUtnkmvBfwMtH47PygjS4cGvfvMrPuxkv8N\"]},\"lib/aori-v2-contracts/src/interfaces/IAoriV2.sol\":{\"keccak256\":\"0x3446a6e5d3da9af32f4835209be90b9cab5b6a6b0d93cc4ad0da6dc14bf2da22\",\"urls\":[\"bzz-raw://546a00158e6270431ac38d9a0fbfd7c43867c63dbb1cb3ac9c147c03efc203b0\",\"dweb:/ipfs/QmNPpG8wHG2RDXD8i95dq8Z6zqi2su4M7oLkCz7jQ1fZuc\"]},\"lib/aori-v2-contracts/src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0896b47d7646823e377ee55e8190151d5ab89f326033e411bf9deb5f2596749d\",\"urls\":[\"bzz-raw://2a4e63afd76c15ea78a2930bfdb6c6048f954289c6de893339bf7232b82c62b7\",\"dweb:/ipfs/Qmcm3mbTBUQFHmZUYpVxhs3GDM4nV9WbckcxYJ5BQkJJGF\"]},\"lib/aori-v2-contracts/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x35338d78ebfa80cb07425c046b7dddbdc4b8d54ac95b5527b6650266420541fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59439cebc4af82bdccd6eb9607455b7f209ae3d2770d2b9a8ae3b7a63205270c\",\"dweb:/ipfs/QmZuJFyhKk6rJYkVTh55r7K916JfT6ueg3Xf25tNezKgHx\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_aoriProtocol",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Call",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct IAoriV2.MatchingDetails",
              "name": "matching",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IAoriV2.Order",
                  "name": "makerOrder",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "inputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "outputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "outputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "toWithdraw",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "struct IAoriV2.Order",
                  "name": "takerOrder",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "inputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "outputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "outputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "toWithdraw",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "makerSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "takerSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "blockDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "seatNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seatHolder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "seatPercentOfFees",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterAoriTrade",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAoriV2.MatchingDetails",
              "name": "matching",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IAoriV2.Order",
                  "name": "makerOrder",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "inputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "outputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "outputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "toWithdraw",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "struct IAoriV2.Order",
                  "name": "takerOrder",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "inputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "outputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "outputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "toWithdraw",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "makerSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "takerSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "blockDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "seatNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seatHolder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "seatPercentOfFees",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeAoriTrade",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Instruction[]",
              "name": "instructions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "managers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isManager",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setManager"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAll"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isValidSignature(bytes32,bytes)": {
            "details": "Should return whether the signature provided is valid for the provided hash",
            "params": {
              "_hash": "Hash of the data to be signed",
              "_signature": "Signature byte array associated with _hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":LayerZero-v2/=lib/aori-v2-contracts/lib/LayerZero-v2/",
        ":aori-v2-contracts/=lib/aori-v2-contracts/",
        ":create3-factory/=lib/create3-factory/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":seaport-types/=lib/seaport-types/",
        ":solmate/=lib/aori-v2-contracts/lib/solmate/src/",
        ":weird-erc20/=lib/aori-v2-contracts/lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/AoriVault.sol": "AoriVault"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/AoriVault.sol": {
        "keccak256": "0x13d18b7ecf0a7fa47e8156a06cc498618b544b761654eee0cc7075cc93c2d671",
        "urls": [
          "bzz-raw://f4851a02ab757c9969704bec85c8884d867a651e2c191735c1e5627da4d0896e",
          "dweb:/ipfs/QmZCjFpfXvBwEinVdLKGucHwkZ2PPUEMa7M19PRNjPWwdy"
        ],
        "license": "UNLICENSED"
      },
      "contracts/BatchExecutor.sol": {
        "keccak256": "0x0888796c720f607efd810f8b2c8bfb7ebf8cc2624849eee4edb5d9e126276bc1",
        "urls": [
          "bzz-raw://bcc633bbdcac51482f42ea8b485152ef884fdae68ca1a9579cdbe3c19cedf7a3",
          "dweb:/ipfs/QmbCpju6pKKGqW9zLYNnV7zaaeAU5h1N6kXuPuNXxzr9JQ"
        ],
        "license": null
      },
      "contracts/adapters/BalancerLoanReceiver.sol": {
        "keccak256": "0x5f29d50e57e3a048ce3b90cee22a2aabbeebf5055e8ae764ffb410d4088f2206",
        "urls": [
          "bzz-raw://05a9d15f62be8fdb7e1bf7e674fe340dbc203079cc1da57d5dc49e8e34fe6259",
          "dweb:/ipfs/QmVqGcBrVFV1jU7aTri5L9k5K2sjqJMdr9rdK68u55QSzT"
        ],
        "license": null
      },
      "contracts/interfaces/IAoriVault.sol": {
        "keccak256": "0xf2a0fd7076fd916fb8c777be5845bf976dc7724fed22a0c6a46d793f44fcbeba",
        "urls": [
          "bzz-raw://053eb93eb95a902a5e63d418d43bc6e28fe376185726a62ec6fbece1f84a011a",
          "dweb:/ipfs/QmbDicQFWsvVLnB6WKqXQd8N5GofSDdcKbkMzeY1GYYpRJ"
        ],
        "license": null
      },
      "contracts/interfaces/IBatchExecutor.sol": {
        "keccak256": "0x195aa243c1befdf3db3dc154e23a239339ddb0ec9aca06f02ac14eab89f4050b",
        "urls": [
          "bzz-raw://6660feb81655afb3c2cd62f482daccb8d344f0adf28bd0ee190b37705cad3181",
          "dweb:/ipfs/QmWDNHNUiV4ZfKct7xJKc91FmLeesAp8u3akXiQT1GUHDG"
        ],
        "license": null
      },
      "lib/aori-v2-contracts/src/interfaces/IAoriHook.sol": {
        "keccak256": "0xc4bd7a35c6e514ba22c3160868928924f22b9df3ab0f5c3ebbb3ebb039361c6b",
        "urls": [
          "bzz-raw://d8b5fff115f14c357863df196ace76eb7474fd59d70a63bfe201e67328309ce5",
          "dweb:/ipfs/QmaiFSvvvm1pUtnkmvBfwMtH47PygjS4cGvfvMrPuxkv8N"
        ],
        "license": null
      },
      "lib/aori-v2-contracts/src/interfaces/IAoriV2.sol": {
        "keccak256": "0x3446a6e5d3da9af32f4835209be90b9cab5b6a6b0d93cc4ad0da6dc14bf2da22",
        "urls": [
          "bzz-raw://546a00158e6270431ac38d9a0fbfd7c43867c63dbb1cb3ac9c147c03efc203b0",
          "dweb:/ipfs/QmNPpG8wHG2RDXD8i95dq8Z6zqi2su4M7oLkCz7jQ1fZuc"
        ],
        "license": null
      },
      "lib/aori-v2-contracts/src/interfaces/IERC1271.sol": {
        "keccak256": "0x0896b47d7646823e377ee55e8190151d5ab89f326033e411bf9deb5f2596749d",
        "urls": [
          "bzz-raw://2a4e63afd76c15ea78a2930bfdb6c6048f954289c6de893339bf7232b82c62b7",
          "dweb:/ipfs/Qmcm3mbTBUQFHmZUYpVxhs3GDM4nV9WbckcxYJ5BQkJJGF"
        ],
        "license": null
      },
      "lib/aori-v2-contracts/src/interfaces/IERC165.sol": {
        "keccak256": "0x35338d78ebfa80cb07425c046b7dddbdc4b8d54ac95b5527b6650266420541fc",
        "urls": [
          "bzz-raw://59439cebc4af82bdccd6eb9607455b7f209ae3d2770d2b9a8ae3b7a63205270c",
          "dweb:/ipfs/QmZuJFyhKk6rJYkVTh55r7K916JfT6ueg3Xf25tNezKgHx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/AoriVault.sol",
    "id": 233,
    "exportedSymbols": {
      "AoriVault": [
        232
      ],
      "BatchExecutor": [
        430
      ],
      "IAoriV2": [
        2144
      ],
      "IAoriVault": [
        685
      ],
      "Instruction": [
        694
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4008:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "39:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "64:57:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IAoriVault.sol",
        "file": "./interfaces/IAoriVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 233,
        "sourceUnit": 686,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IAoriVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 685,
              "src": "73:10:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "122:71:0",
        "nodes": [],
        "absolutePath": "lib/aori-v2-contracts/src/interfaces/IAoriV2.sol",
        "file": "aori-v2-contracts/src/interfaces/IAoriV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 233,
        "sourceUnit": 2145,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "IAoriV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2144,
              "src": "131:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "194:62:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IBatchExecutor.sol",
        "file": "./interfaces/IBatchExecutor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 233,
        "sourceUnit": 717,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "Instruction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 694,
              "src": "203:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9,
        "nodeType": "ImportDirective",
        "src": "257:52:0",
        "nodes": [],
        "absolutePath": "contracts/BatchExecutor.sol",
        "file": "./BatchExecutor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 233,
        "sourceUnit": 431,
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "BatchExecutor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 430,
              "src": "266:13:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 232,
        "nodeType": "ContractDefinition",
        "src": "311:3736:0",
        "nodes": [
          {
            "id": 16,
            "nodeType": "VariableDeclaration",
            "src": "425:56:0",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ERC1271_MAGICVALUE",
            "nameLocation": "450:18:0",
            "scope": 232,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 14,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "425:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783136323662613765",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "471:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_371636862_by_1",
                "typeString": "int_const 371636862"
              },
              "value": "0x1626ba7e"
            },
            "visibility": "internal"
          },
          {
            "id": 18,
            "nodeType": "VariableDeclaration",
            "src": "675:28:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "aoriProtocol",
            "nameLocation": "691:12:0",
            "scope": 232,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "675:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 33,
            "nodeType": "FunctionDefinition",
            "src": "891:140:0",
            "nodes": [],
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "986:45:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28,
                      "name": "aoriProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "996:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29,
                      "name": "_aoriProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1011:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "996:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "996:28:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 25,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20,
                    "src": "978:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 26,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 24,
                  "name": "BatchExecutor",
                  "nameLocations": [
                    "964:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 430,
                  "src": "964:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "964:21:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "920:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "912:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_aoriProtocol",
                  "nameLocation": "944:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "936:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "902:61:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:0:0"
            },
            "scope": 232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89,
            "nodeType": "FunctionDefinition",
            "src": "1215:557:0",
            "nodes": [],
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1332:440:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 43,
                        "name": "hookData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1346:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1355:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1346:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1365:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1346:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50,
                  "nodeType": "IfStatement",
                  "src": "1342:62:0",
                  "trueBody": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1368:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1389:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 42,
                        "id": 48,
                        "nodeType": "Return",
                        "src": "1382:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 52,
                          "name": "managers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "1422:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 55,
                        "indexExpression": {
                          "expression": {
                            "id": 53,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "1431:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1434:6:0",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "1431:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1422:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061206d616e616765722063616e20666f7263652074686520657865637574696f6e206f662074686973207472616465",
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1443:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96a0ab5a3c38144fddd5430f9c6ab0c877e41ffc1c0ba56aa71ff286414defd",
                          "typeString": "literal_string \"Only a manager can force the execution of this trade\""
                        },
                        "value": "Only a manager can force the execution of this trade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96a0ab5a3c38144fddd5430f9c6ab0c877e41ffc1c0ba56aa71ff286414defd",
                          "typeString": "literal_string \"Only a manager can force the execution of this trade\""
                        }
                      ],
                      "id": 51,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1414:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1414:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 60,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1516:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1520:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1516:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 62,
                          "name": "aoriProtocol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1530:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1516:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616f726950726f746f636f6c2063616e20696e7465726163742077697468207468697320636f6e7472616374",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1544:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88df60a177765981c64fa1b940747f7763c0c5faea3335977a4c5f66ae8d169c",
                          "typeString": "literal_string \"Only aoriProtocol can interact with this contract\""
                        },
                        "value": "Only aoriProtocol can interact with this contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88df60a177765981c64fa1b940747f7763c0c5faea3335977a4c5f66ae8d169c",
                          "typeString": "literal_string \"Only aoriProtocol can interact with this contract\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1508:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1508:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:88:0"
                },
                {
                  "assignments": [
                    71,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "preSwapInstructions",
                      "nameLocation": "1629:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1608:40:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Instruction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 69,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 68,
                            "name": "Instruction",
                            "nameLocations": [
                              "1608:11:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 694,
                            "src": "1608:11:0"
                          },
                          "referencedDeclaration": 694,
                          "src": "1608:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Instruction_$694_storage_ptr",
                            "typeString": "struct Instruction"
                          }
                        },
                        "id": 70,
                        "nodeType": "ArrayTypeName",
                        "src": "1608:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$694_storage_$dyn_storage_ptr",
                          "typeString": "struct Instruction[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 81,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74,
                        "name": "hookData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1664:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 75,
                              "name": "Instruction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "1675:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Instruction_$694_storage_ptr_$",
                                "typeString": "type(struct Instruction storage pointer)"
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1675:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Instruction memory[] memory)"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 77,
                              "name": "Instruction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "1690:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Instruction_$694_storage_ptr_$",
                                "typeString": "type(struct Instruction storage pointer)"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1690:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Instruction memory[] memory)"
                            }
                          }
                        ],
                        "id": 79,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1674:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(struct Instruction memory[] memory),type(struct Instruction memory[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(struct Instruction memory[] memory),type(struct Instruction memory[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 72,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1653:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1657:6:0",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1653:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Instruction memory[] memory,struct Instruction memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1607:98:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "preSwapInstructions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1724:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Instruction memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Instruction memory[] memory"
                        }
                      ],
                      "id": 82,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "1715:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct Instruction memory[] memory)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:29:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1761:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 42,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1754:11:0"
                }
              ]
            },
            "baseFunctions": [
              665
            ],
            "functionSelector": "7ad28a59",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeAoriTrade",
            "nameLocation": "1224:15:0",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "matching",
                  "nameLocation": "1273:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1240:41:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchingDetails_$2028_calldata_ptr",
                    "typeString": "struct IAoriV2.MatchingDetails"
                  },
                  "typeName": {
                    "id": 35,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34,
                      "name": "IAoriV2.MatchingDetails",
                      "nameLocations": [
                        "1240:7:0",
                        "1248:15:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2028,
                      "src": "1240:23:0"
                    },
                    "referencedDeclaration": 2028,
                    "src": "1240:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchingDetails_$2028_storage_ptr",
                      "typeString": "struct IAoriV2.MatchingDetails"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "hookData",
                  "nameLocation": "1298:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1283:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:68:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1326:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1325:6:0"
            },
            "scope": 232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 145,
            "nodeType": "FunctionDefinition",
            "src": "1778:537:0",
            "nodes": [],
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1894:421:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 99,
                        "name": "hookData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "1908:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1917:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1908:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1927:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1908:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 106,
                  "nodeType": "IfStatement",
                  "src": "1904:62:0",
                  "trueBody": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "1930:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1951:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 98,
                        "id": 104,
                        "nodeType": "Return",
                        "src": "1944:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 108,
                          "name": "managers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "1984:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 111,
                        "indexExpression": {
                          "expression": {
                            "id": 109,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "1993:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1996:6:0",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "1993:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1984:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061206d616e616765722063616e20666f7263652074686520657865637574696f6e206f662074686973207472616465",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2005:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96a0ab5a3c38144fddd5430f9c6ab0c877e41ffc1c0ba56aa71ff286414defd",
                          "typeString": "literal_string \"Only a manager can force the execution of this trade\""
                        },
                        "value": "Only a manager can force the execution of this trade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96a0ab5a3c38144fddd5430f9c6ab0c877e41ffc1c0ba56aa71ff286414defd",
                          "typeString": "literal_string \"Only a manager can force the execution of this trade\""
                        }
                      ],
                      "id": 107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1976:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 116,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2078:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2082:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2078:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 118,
                          "name": "aoriProtocol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "2092:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2078:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616f726950726f746f636f6c2063616e207472616465",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2106:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d06a134a62a7efc0007387f8c3a1db7e04eabfab483ba6bf581f79aec521826",
                          "typeString": "literal_string \"Only aoriProtocol can trade\""
                        },
                        "value": "Only aoriProtocol can trade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d06a134a62a7efc0007387f8c3a1db7e04eabfab483ba6bf581f79aec521826",
                          "typeString": "literal_string \"Only aoriProtocol can trade\""
                        }
                      ],
                      "id": 115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2070:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2070:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2070:66:0"
                },
                {
                  "assignments": [
                    null,
                    127
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "postSwapInstructions",
                      "nameLocation": "2171:20:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "2150:41:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Instruction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 125,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 124,
                            "name": "Instruction",
                            "nameLocations": [
                              "2150:11:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 694,
                            "src": "2150:11:0"
                          },
                          "referencedDeclaration": 694,
                          "src": "2150:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Instruction_$694_storage_ptr",
                            "typeString": "struct Instruction"
                          }
                        },
                        "id": 126,
                        "nodeType": "ArrayTypeName",
                        "src": "2150:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$694_storage_$dyn_storage_ptr",
                          "typeString": "struct Instruction[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 137,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 130,
                        "name": "hookData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2206:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 131,
                              "name": "Instruction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "2217:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Instruction_$694_storage_ptr_$",
                                "typeString": "type(struct Instruction storage pointer)"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2217:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Instruction memory[] memory)"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 133,
                              "name": "Instruction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "2232:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Instruction_$694_storage_ptr_$",
                                "typeString": "type(struct Instruction storage pointer)"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2232:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Instruction memory[] memory)"
                            }
                          }
                        ],
                        "id": 135,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2216:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(struct Instruction memory[] memory),type(struct Instruction memory[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(struct Instruction memory[] memory),type(struct Instruction memory[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 128,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2195:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2199:6:0",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2195:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Instruction memory[] memory,struct Instruction memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2147:100:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 139,
                        "name": "postSwapInstructions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2266:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Instruction memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Instruction memory[] memory"
                        }
                      ],
                      "id": 138,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "2257:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Instruction_$694_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct Instruction memory[] memory)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2257:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2257:30:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2304:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 98,
                  "id": 143,
                  "nodeType": "Return",
                  "src": "2297:11:0"
                }
              ]
            },
            "baseFunctions": [
              675
            ],
            "functionSelector": "a9cfc240",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterAoriTrade",
            "nameLocation": "1787:14:0",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "matching",
                  "nameLocation": "1835:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1802:41:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchingDetails_$2028_calldata_ptr",
                    "typeString": "struct IAoriV2.MatchingDetails"
                  },
                  "typeName": {
                    "id": 91,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 90,
                      "name": "IAoriV2.MatchingDetails",
                      "nameLocations": [
                        "1802:7:0",
                        "1810:15:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2028,
                      "src": "1802:23:0"
                    },
                    "referencedDeclaration": 2028,
                    "src": "1802:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchingDetails_$2028_storage_ptr",
                      "typeString": "struct IAoriV2.MatchingDetails"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "hookData",
                  "nameLocation": "1860:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1845:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1845:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1801:68:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1888:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1887:6:0"
            },
            "scope": 232,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 209,
            "nodeType": "FunctionDefinition",
            "src": "2501:1127:0",
            "nodes": [],
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2596:1032:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 155,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "2614:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2625:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2614:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2635:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "2614:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2606:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:32:0"
                },
                {
                  "assignments": [
                    162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 162,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "2705:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "2699:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2699:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2699:7:0"
                },
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2724:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "2716:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2716:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 166,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2716:9:0"
                },
                {
                  "assignments": [
                    168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "2743:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "2735:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2735:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2735:9:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2763:301:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2833:31:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "2848:10:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2860:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2844:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2844:19:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2838:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2838:26:0"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "2833:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2909:31:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "2924:10:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2936:2:0",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2920:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2920:19:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2914:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2914:26:0"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "2909:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3014:40:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3024:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "3037:10:0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3049:2:0",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3033:3:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3033:19:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3027:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3027:26:0"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "3019:4:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3019:35:0"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "3014:1:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2848:10:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2924:10:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3037:10:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 165,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2833:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 168,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2909:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 162,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3014:1:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 170,
                  "nodeType": "InlineAssembly",
                  "src": "2754:310:0"
                },
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "ethSignSigner",
                      "nameLocation": "3082:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "3074:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3074:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 174,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "3108:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 175,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "3115:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 176,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "3118:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 177,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3121:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 173,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "3098:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3098:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3074:49:0"
                },
                {
                  "assignments": [
                    181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 181,
                      "mutability": "mutable",
                      "name": "eip1271Signer",
                      "nameLocation": "3216:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "3208:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 180,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3208:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 194,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                "id": 186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3320:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                  "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                },
                                "value": "\u0019Ethereum Signed Message:\n32"
                              },
                              {
                                "id": 187,
                                "name": "_hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "3376:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                  "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 184,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3282:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3286:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3282:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3282:117:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 183,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3255:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3255:158:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 190,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "3415:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 191,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "3418:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 192,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3421:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 182,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "3232:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:191:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3208:215:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 195,
                        "name": "managers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "3499:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 197,
                      "indexExpression": {
                        "id": 196,
                        "name": "ethSignSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "3508:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3499:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 198,
                        "name": "managers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "3526:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "id": 199,
                        "name": "eip1271Signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "3535:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3526:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3499:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 205,
                  "nodeType": "IfStatement",
                  "src": "3495:106:0",
                  "trueBody": {
                    "id": 204,
                    "nodeType": "Block",
                    "src": "3551:50:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 202,
                          "name": "ERC1271_MAGICVALUE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "3572:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 153,
                        "id": 203,
                        "nodeType": "Return",
                        "src": "3565:25:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "307830",
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3618:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x0"
                  },
                  "functionReturnParameters": 153,
                  "id": 207,
                  "nodeType": "Return",
                  "src": "3611:10:0"
                }
              ]
            },
            "baseFunctions": [
              684
            ],
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "2510:16:0",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "2535:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2527:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "2555:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2542:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2526:40:0"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2588:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2588:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2587:8:0"
            },
            "scope": 232,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 231,
            "nodeType": "FunctionDefinition",
            "src": "3813:232:0",
            "nodes": [],
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "3888:157:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 216,
                            "name": "_interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "3918:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 217,
                                "name": "IAoriVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 685,
                                "src": "3934:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAoriVault_$685_$",
                                  "typeString": "type(contract IAoriVault)"
                                }
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3945:15:0",
                              "memberName": "beforeAoriTrade",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 665,
                              "src": "3934:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_MatchingDetails_$2028_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function IAoriVault.beforeAoriTrade(struct IAoriV2.MatchingDetails calldata,bytes calldata) returns (bool)"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3961:8:0",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3934:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3918:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 221,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3917:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 222,
                            "name": "_interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "3987:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 223,
                                "name": "IAoriVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 685,
                                "src": "4003:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAoriVault_$685_$",
                                  "typeString": "type(contract IAoriVault)"
                                }
                              },
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4014:14:0",
                              "memberName": "afterAoriTrade",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 675,
                              "src": "4003:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_MatchingDetails_$2028_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function IAoriVault.afterAoriTrade(struct IAoriV2.MatchingDetails calldata,bytes calldata) returns (bool)"
                              }
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4029:8:0",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4003:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3987:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 227,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3986:52:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3917:121:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 229,
                  "nodeType": "Return",
                  "src": "3898:140:0"
                }
              ]
            },
            "baseFunctions": [
              2168
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3822:17:0",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "3847:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "3840:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3840:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3839:21:0"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "3882:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3882:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3881:6:0"
            },
            "scope": 232,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "IAoriVault",
              "nameLocations": [
                "333:10:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 685,
              "src": "333:10:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "333:10:0"
          },
          {
            "baseName": {
              "id": 12,
              "name": "BatchExecutor",
              "nameLocations": [
                "345:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 430,
              "src": "345:13:0"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "345:13:0"
          }
        ],
        "canonicalName": "AoriVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          232,
          430,
          685,
          716,
          1978,
          2169,
          2157
        ],
        "name": "AoriVault",
        "nameLocation": "320:9:0",
        "scope": 233,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 0
}