{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aoriProtocol",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Call",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "BLAST",
      "outputs": [
        {
          "internalType": "contract IBlast",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "inputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "inputZone",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "outputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "outputZone",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "toWithdraw",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAoriV2.Order",
              "name": "makerOrder",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "inputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "inputZone",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "outputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "outputZone",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "toWithdraw",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAoriV2.Order",
              "name": "takerOrder",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerSignature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "blockDeadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "seatNumber",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seatHolder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "seatPercentOfFees",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAoriV2.MatchingDetails",
          "name": "matching",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "hookData",
          "type": "bytes"
        }
      ],
      "name": "afterAoriTrade",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aoriProtocol",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "inputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "inputZone",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "outputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "outputZone",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "toWithdraw",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAoriV2.Order",
              "name": "makerOrder",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "inputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "inputZone",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "outputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "outputZone",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "counter",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "toWithdraw",
                  "type": "bool"
                }
              ],
              "internalType": "struct IAoriV2.Order",
              "name": "takerOrder",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "makerSignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerSignature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "blockDeadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "seatNumber",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seatHolder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "seatPercentOfFees",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAoriV2.MatchingDetails",
          "name": "matching",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "hookData",
          "type": "bytes"
        }
      ],
      "name": "beforeAoriTrade",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Instruction[]",
          "name": "instructions",
          "type": "tuple[]"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "managers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aoriProtocol",
          "type": "address"
        }
      ],
      "name": "setAoriProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6080346200019157620014e090600090601f38849003908101601f19168201906001600160401b038211838310176200017d578083916040968794855283398101031262000179576200006060206200005883620001c0565b9201620001c0565b60018060a01b038092169160018060a01b0319918383865416178555838552600160205285852060ff19906001828254161790553086526001878720918254161790551690600254161760025573430000000000000000000000000000000000000290813b1562000155578351634e606c4760e01b8152838160048183875af180156200016f5762000159575b50813b15620001555782916024839286519485938492631d70c8d360e31b845260048401525af180156200014b5762000130575b825161130a9081620001d68239f35b6200013c829162000196565b62000148578062000121565b80fd5b83513d84823e3d90fd5b8280fd5b620001679093919362000196565b9138620000ed565b85513d86823e3d90fd5b5080fd5b634e487b7160e01b84526041600452602484fd5b600080fd5b6001600160401b038111620001aa57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001915756fe60806040526004361015610018575b361561001657005b005b60003560e01c806301ffc9a7146100f457806309cae2c8146100eb5780631626ba7e146100e25780633f707e6b146100d95780636cd2bc88146100d05780637ad28a59146100c757806397d75776146100be578063a5e90eee146100b5578063a9cfc240146100ac578063f11b9f15146100a35763fdff9b4d0361000e5761009e610a33565b61000e565b5061009e6109e0565b5061009e6109c5565b5061009e61089b565b5061009e610843565b5061009e61081e565b5061009e610680565b5061009e610590565b5061009e610509565b5061009e610220565b50346101b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101b457807f7ad28a59000000000000000000000000000000000000000000000000000000006020921490811561018a575b506040519015158152f35b7fa9cfc240000000000000000000000000000000000000000000000000000000009150143861017f565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101b457565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036101b457565b359073ffffffffffffffffffffffffffffffffffffffff821682036101b457565b50346101b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576102586101b9565b61035f73ffffffffffffffffffffffffffffffffffffffff6102786101dc565b926102b56102b06102a93373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b5460ff1690565b611225565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260209485939192909116908383602481855afa9283156103d2575b6000936103a3575b5060006040518096819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af18015610396575b61037057005b8161001692903d1061038f575b6103878183610438565b8101906112bf565b503d61037d565b61039e610de9565b61036a565b6103c4919350843d86116103cb575b6103bc8183610438565b8101906112b0565b9138610304565b503d6103b2565b6103da610de9565b6102fc565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761042b57604052565b6104336103df565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761042b57604052565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116104b5575b01160190565b6104bd6103df565b6104af565b81601f820112156101b4578035906104d982610479565b926104e76040519485610438565b828452602083830101116101b457816000926020809301838601378301015290565b50346101b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b45760243567ffffffffffffffff81116101b45761056661055e60209236906004016104c2565b600435610df6565b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b45760043567ffffffffffffffff8082116101b457366023830112156101b45781600401359081116101b4573660248260051b840101116101b45733600052600160205260ff6040600020541615610622576100169161061d916024369201610b29565b61111c565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f6e6c792061206d616e616765722063616e20657865637574650000000000006044820152fd5b50346101b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576106b86101b9565b33600052600160205260ff6040600020541615610714576100169073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920746865206f776e65722063616e2073657420746865206e6577206160448201527f6f726950726f746f636f6c0000000000000000000000000000000000000000006064820152fd5b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906040828401126101b45760043567ffffffffffffffff928382116101b4576104409082860301126101b45760040192602435908382116101b457806023830112156101b45781600401359384116101b457602484830101116101b4576024019190565b50346101b457602061083961083236610798565b9150610c47565b6040519015158152f35b50346101b45760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b45760206040517343000000000000000000000000000000000000028152f35b801515036101b457565b50346101b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576108d36101b9565b6024356108df81610891565b73ffffffffffffffffffffffffffffffffffffffff80600054163303610941576100169216600052600160205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60448201527f6e000000000000000000000000000000000000000000000000000000000000006064820152fd5b50346101b45760206108396109d936610798565b9150610d2d565b50346101b45760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b457602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b50346101b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b45773ffffffffffffffffffffffffffffffffffffffff610a806101b9565b166000526001602052602060ff604060002054166040519015158152f35b15610aa557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4f6e6c792061206d616e616765722063616e20666f726365207468652065786560448201527f637574696f6e206f6620746869732074726164650000000000000000000000006064820152fd5b9291909267ffffffffffffffff808511610bd9575b8460051b60409384519460208096610b5882860182610438565b8099815201928501948286116101b45780935b868510610b7c575050505050505050565b84358681116101b45782016060818603126101b457835191610b9d8361040f565b610ba6826101ff565b8352898201358a84015284820135928884116101b457610bca878c958695016104c2565b86820152815201940193610b6b565b610be16103df565b610b3e565b9080601f830112156101b457816020610c0193359101610b29565b90565b9190916040818403126101b45767ffffffffffffffff9281358481116101b45781610c30918401610be6565b9360208301359081116101b457610c019201610be6565b908015610d2657326000526001602052610c6860ff60406000205416610a9e565b73ffffffffffffffffffffffffffffffffffffffff600254163303610ca25781610c9791610c9d930190610c04565b5061111c565b600190565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f4f6e6c7920616f726950726f746f636f6c2063616e20696e746572616374207760448201527f697468207468697320636f6e74726163740000000000000000000000000000006064820152fd5b5050600190565b908015610d2657326000526001602052610d4e60ff60406000205416610a9e565b73ffffffffffffffffffffffffffffffffffffffff600254163303610d845781610d7d91610c9d930190610c04565b905061111c565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c7920616f726950726f746f636f6c2063616e20747261646500000000006044820152fd5b156101b457565b506040513d6000823e3d90fd5b6020610ef692610e096041825114610de2565b818101519060606040820151910151916000958693841a9285858589610e508588604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15610fab575b845196604051610ecc81610ea08a82019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610438565b51902092604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15610f9e575b610f346102a983519273ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b908115610f69575b50610f445790565b507f1626ba7e0000000000000000000000000000000000000000000000000000000090565b610f9891506102a99073ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b38610f3c565b610fa6610de9565b610f05565b610fb3610de9565b610e5f565b8051821015610fcc5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b3d15611026573d9061100c82610479565b9161101a6040519384610438565b82523d6000602084013e565b606090565b1561103257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f43616c6c20746f2065787465726e616c2066756e6374696f6e206661696c65646044820152fd5b919073ffffffffffffffffffffffffffffffffffffffff90949394168252602090818301526060604083015283519384606084015260005b858110611108575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006080809697860101520116010190565b8181018301518482016080015282016110c8565b80519060005b82811061112e57505050565b7f58920bab8ebe20f458895b68243189a021c51741421c3d98eff715b8e5afe1fa61117761115c8385610fb8565b515173ffffffffffffffffffffffffffffffffffffffff1690565b6020906111c4826111888688610fb8565b5101519260406111ba6000808361119f8b8d610fb8565b51015194855190860189895af16111b4610ffb565b5061102b565b5193849384611090565b0390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111f657600101611122565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b1561122c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4f6e6c79206f776e6572206f72207468697320636f6e74726163742063616e2060448201527f65786563757465000000000000000000000000000000000000000000000000006064820152fd5b908160209103126101b4575190565b908160209103126101b45751610c018161089156fea2646970667358221220b59e7ef44b75f0ad346ac68be25606cdeb2720f537a4908d136e53c225a43cc764736f6c63430008110033",
    "sourceMap": "435:4102:1:-:0;;;;;;-1:-1:-1;;435:4102:1;;;;;;;;-1:-1:-1;;435:4102:1;;;;-1:-1:-1;;;;;435:4102:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:4:2;435:4102:1;;;;;;;;;;;;;;;1211:28;435:4102;;;1211:28;435:4102;654:42;1250:29;;;;;;435:4102;;-1:-1:-1;;;1250:29:1;;;435:4102;1250:29;435:4102;1250:29;;;;;;;;;;-1:-1:-1;1289:31:1;;;;;;435:4102;;647:50;435:4102;;;;647:50;;;;;;;;1289:31;;1250:29;1289:31;;647:50;1289:31;;;;;;;;-1:-1:-1;435:4102:1;;;;;;;;;1289:31;;;;;:::i;:::-;647:50;;1289:31;;;647:50;435:4102;;1289:31;435:4102;;647:50;435:4102;;647:50;;;;1289:31;435:4102;;;1250:29;;;;;;;:::i;:::-;;;;;;435:4102;;647:50;435:4102;;647:50;;;;435:4102;;;;;-1:-1:-1;;;435:4102:1;;;;;;;;;;;;;-1:-1:-1;;;;;435:4102:1;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;435:4102:1;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610018575b361561001657005b005b60003560e01c806301ffc9a7146100f457806309cae2c8146100eb5780631626ba7e146100e25780633f707e6b146100d95780636cd2bc88146100d05780637ad28a59146100c757806397d75776146100be578063a5e90eee146100b5578063a9cfc240146100ac578063f11b9f15146100a35763fdff9b4d0361000e5761009e610a33565b61000e565b5061009e6109e0565b5061009e6109c5565b5061009e61089b565b5061009e610843565b5061009e61081e565b5061009e610680565b5061009e610590565b5061009e610509565b5061009e610220565b50346101b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101b457807f7ad28a59000000000000000000000000000000000000000000000000000000006020921490811561018a575b506040519015158152f35b7fa9cfc240000000000000000000000000000000000000000000000000000000009150143861017f565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101b457565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036101b457565b359073ffffffffffffffffffffffffffffffffffffffff821682036101b457565b50346101b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576102586101b9565b61035f73ffffffffffffffffffffffffffffffffffffffff6102786101dc565b926102b56102b06102a93373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b5460ff1690565b611225565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260209485939192909116908383602481855afa9283156103d2575b6000936103a3575b5060006040518096819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af18015610396575b61037057005b8161001692903d1061038f575b6103878183610438565b8101906112bf565b503d61037d565b61039e610de9565b61036a565b6103c4919350843d86116103cb575b6103bc8183610438565b8101906112b0565b9138610304565b503d6103b2565b6103da610de9565b6102fc565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761042b57604052565b6104336103df565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761042b57604052565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116104b5575b01160190565b6104bd6103df565b6104af565b81601f820112156101b4578035906104d982610479565b926104e76040519485610438565b828452602083830101116101b457816000926020809301838601378301015290565b50346101b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b45760243567ffffffffffffffff81116101b45761056661055e60209236906004016104c2565b600435610df6565b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b45760043567ffffffffffffffff8082116101b457366023830112156101b45781600401359081116101b4573660248260051b840101116101b45733600052600160205260ff6040600020541615610622576100169161061d916024369201610b29565b61111c565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f6e6c792061206d616e616765722063616e20657865637574650000000000006044820152fd5b50346101b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576106b86101b9565b33600052600160205260ff6040600020541615610714576100169073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f6e6c7920746865206f776e65722063616e2073657420746865206e6577206160448201527f6f726950726f746f636f6c0000000000000000000000000000000000000000006064820152fd5b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906040828401126101b45760043567ffffffffffffffff928382116101b4576104409082860301126101b45760040192602435908382116101b457806023830112156101b45781600401359384116101b457602484830101116101b4576024019190565b50346101b457602061083961083236610798565b9150610c47565b6040519015158152f35b50346101b45760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b45760206040517343000000000000000000000000000000000000028152f35b801515036101b457565b50346101b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576108d36101b9565b6024356108df81610891565b73ffffffffffffffffffffffffffffffffffffffff80600054163303610941576100169216600052600160205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60448201527f6e000000000000000000000000000000000000000000000000000000000000006064820152fd5b50346101b45760206108396109d936610798565b9150610d2d565b50346101b45760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b457602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b50346101b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b45773ffffffffffffffffffffffffffffffffffffffff610a806101b9565b166000526001602052602060ff604060002054166040519015158152f35b15610aa557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4f6e6c792061206d616e616765722063616e20666f726365207468652065786560448201527f637574696f6e206f6620746869732074726164650000000000000000000000006064820152fd5b9291909267ffffffffffffffff808511610bd9575b8460051b60409384519460208096610b5882860182610438565b8099815201928501948286116101b45780935b868510610b7c575050505050505050565b84358681116101b45782016060818603126101b457835191610b9d8361040f565b610ba6826101ff565b8352898201358a84015284820135928884116101b457610bca878c958695016104c2565b86820152815201940193610b6b565b610be16103df565b610b3e565b9080601f830112156101b457816020610c0193359101610b29565b90565b9190916040818403126101b45767ffffffffffffffff9281358481116101b45781610c30918401610be6565b9360208301359081116101b457610c019201610be6565b908015610d2657326000526001602052610c6860ff60406000205416610a9e565b73ffffffffffffffffffffffffffffffffffffffff600254163303610ca25781610c9791610c9d930190610c04565b5061111c565b600190565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f4f6e6c7920616f726950726f746f636f6c2063616e20696e746572616374207760448201527f697468207468697320636f6e74726163740000000000000000000000000000006064820152fd5b5050600190565b908015610d2657326000526001602052610d4e60ff60406000205416610a9e565b73ffffffffffffffffffffffffffffffffffffffff600254163303610d845781610d7d91610c9d930190610c04565b905061111c565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c7920616f726950726f746f636f6c2063616e20747261646500000000006044820152fd5b156101b457565b506040513d6000823e3d90fd5b6020610ef692610e096041825114610de2565b818101519060606040820151910151916000958693841a9285858589610e508588604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15610fab575b845196604051610ecc81610ea08a82019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610438565b51902092604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa15610f9e575b610f346102a983519273ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b908115610f69575b50610f445790565b507f1626ba7e0000000000000000000000000000000000000000000000000000000090565b610f9891506102a99073ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b38610f3c565b610fa6610de9565b610f05565b610fb3610de9565b610e5f565b8051821015610fcc5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b3d15611026573d9061100c82610479565b9161101a6040519384610438565b82523d6000602084013e565b606090565b1561103257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f43616c6c20746f2065787465726e616c2066756e6374696f6e206661696c65646044820152fd5b919073ffffffffffffffffffffffffffffffffffffffff90949394168252602090818301526060604083015283519384606084015260005b858110611108575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006080809697860101520116010190565b8181018301518482016080015282016110c8565b80519060005b82811061112e57505050565b7f58920bab8ebe20f458895b68243189a021c51741421c3d98eff715b8e5afe1fa61117761115c8385610fb8565b515173ffffffffffffffffffffffffffffffffffffffff1690565b6020906111c4826111888688610fb8565b5101519260406111ba6000808361119f8b8d610fb8565b51015194855190860189895af16111b4610ffb565b5061102b565b5193849384611090565b0390a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111f657600101611122565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b1561122c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4f6e6c79206f776e6572206f72207468697320636f6e74726163742063616e2060448201527f65786563757465000000000000000000000000000000000000000000000000006064820152fd5b908160209103126101b4575190565b908160209103126101b45751610c018161089156fea2646970667358221220b59e7ef44b75f0ad346ac68be25606cdeb2720f537a4908d136e53c225a43cc764736f6c63430008110033",
    "sourceMap": "435:4102:1:-:0;;;;;;;;;-1:-1:-1;435:4102:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4214:51;4230:35;435:4102;4214:51;;4213:121;;;;;435:4102;;;;;;;;;;4213:121;4299:34;4283:50;;;4213:121;;;435:4102;-1:-1:-1;435:4102:1;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;2395:73:2;435:4102:1;;;:::i;:::-;2330:10:2;2313:72;2321:20;;2330:10;435:4102:1;;;;2321:8:2;435:4102:1;;;;;;;2321:20:2;435:4102:1;;;;;2321:20:2;2313:72;:::i;:::-;435:4102:1;;;2429:38:2;;2461:4;435:4102:1;2429:38:2;;435:4102:1;;;;;;;;;;;;;;;;2429:38:2;;;;;;;435:4102:1;-1:-1:-1;2429:38:2;;;435:4102:1;;-1:-1:-1;435:4102:1;;2395:73:2;;;;;;435:4102:1;2395:73:2;;435:4102:1;2395:73:2;;435:4102:1;;;;;;;;;;;;;;;;;2395:73:2;;;;;;;;;435:4102:1;2395:73:2;;435:4102:1;2395:73:2;;;;;;-1:-1:-1;2395:73:2;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;2429:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;435:4102:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;435:4102:1;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1395:10:2;-1:-1:-1;435:4102:1;1386:8:2;435:4102:1;;;;-1:-1:-1;435:4102:1;;;;;;1447:22:2;435:4102:1;;;;;;;;:::i;:::-;1447:22:2;:::i;435:4102:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4431:10;-1:-1:-1;435:4102:1;4422:8;435:4102;;;;-1:-1:-1;435:4102:1;;;;;;4500:28;;435:4102;;;4500:28;435:4102;;;4500:28;435:4102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;654:42;435:4102;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;-1:-1:-1;435:4102:1;;2753:10:2;2744:19;435:4102:1;;2811:31:2;435:4102:1;;-1:-1:-1;435:4102:1;2811:8:2;435:4102:1;;;-1:-1:-1;435:4102:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;891:27;435:4102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;435:4102:1;413:41:2;435:4102:1;;;;;-1:-1:-1;435:4102:1;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;1511:557::-;;1642:20;;1638:62;;1727:9;1661:1;435:4102;1718:8;435:4102;;1710:84;435:4102;;1661:1;435:4102;;;1710:84;:::i;:::-;435:4102;1826:12;435:4102;;1812:10;:26;435:4102;;1949:52;;;2020:19;1949:52;;;;:::i;:::-;2020:19;;:::i;:::-;1718:8;1511:557;:::o;435:4102::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1638:62;1678:11;;1685:4;1678:11;:::o;2074:537::-;;2204:20;;2200:62;;2289:9;2223:1;435:4102;2280:8;435:4102;;2272:84;435:4102;;2223:1;435:4102;;;2272:84;:::i;:::-;435:4102;2388:12;435:4102;;2374:10;:26;435:4102;;2491:52;;;2562:20;2491:52;;;;:::i;:::-;2562:20;;;:::i;435:4102::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;2797:1127;3050:310;3528:191;2797:1127;2902:32;2931:2;435:4102;;2910:23;2902:32;:::i;:::-;3050:310;;;;;;;;;;;;;-1:-1:-1;;3050:310:1;;;;;435:4102;;;;;3394:25;435:4102;;3050:310;435:4102;3394:25;;;;435:4102;;;;;;;;;;;;;;;;;;;;;;;;;3394:25;;;;;;;;;;;;2797:1127;3394:25;;435:4102;3050:310;435:4102;3578:117;;;;;;;;435:4102;;;;;;;;;;;;3578:117;;;;;;;;;:::i;:::-;435:4102;3551:158;;435:4102;3050:310;435:4102;3528:191;;;;435:4102;;;;;;;;;;;;;;;;;;;;;;;;;3528:191;;;;;;3394:25;3528:191;;;;;2797:1127;3795:23;;3528:191;;3795:23;435:4102;;;;3394:25;435:4102;;;;;;;3795:23;:50;;;;;2797:1127;3791:106;;;2797:1127;:::o;3791:106::-;3861:25;435:4102;3861:25;:::o;3795:50::-;3822:23;;;;;435:4102;;;;3394:25;435:4102;;;;;;;3822:23;3795:50;;;3528:191;;;:::i;:::-;;;3394:25;;;:::i;:::-;;;435:4102;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;435:4102:1;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;1482:572:2;435:4102:1;;1619:9:2;-1:-1:-1;1630:10:2;;;;;;1482:572;;;:::o;1642:3::-;2015:22;1674:18;:15;;;;:::i;:::-;;435:4102:1;;;;;1674:18:2;1722:21;:15;2015:22;1722:15;;;;;:::i;:::-;;:21;435:4102:1;1778:20:2;;1944:52;-1:-1:-1;1778:15:2;;;;;;:::i;:::-;;:20;;1902:28;;;;;;;;;;;;:::i;:::-;;1944:52;:::i;:::-;435:4102:1;2015:22:2;;;;;:::i;:::-;;;;435:4102:1;;;;;;;1619:9:2;;435:4102:1;;-1:-1:-1;435:4102:1;;;;;-1:-1:-1;435:4102:1;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BLAST()": "97d75776",
    "afterAoriTrade(((address,address,uint256,uint256,address,address,uint256,uint256,address,uint256,uint256,uint256,uint256,bool),(address,address,uint256,uint256,address,address,uint256,uint256,address,uint256,uint256,uint256,uint256,bool),bytes,bytes,uint256,uint256,address,uint256),bytes)": "a9cfc240",
    "aoriProtocol()": "f11b9f15",
    "beforeAoriTrade(((address,address,uint256,uint256,address,address,uint256,uint256,address,uint256,uint256,uint256,uint256,bool),(address,address,uint256,uint256,address,address,uint256,uint256,address,uint256,uint256,uint256,uint256,bool),bytes,bytes,uint256,uint256,address,uint256),bytes)": "7ad28a59",
    "execute((address,uint256,bytes)[])": "3f707e6b",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "managers(address)": "fdff9b4d",
    "setAoriProtocol(address)": "6cd2bc88",
    "setManager(address,bool)": "a5e90eee",
    "supportsInterface(bytes4)": "01ffc9a7",
    "withdrawAll(address,address)": "09cae2c8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aoriProtocol\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Call\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"BLAST\",\"outputs\":[{\"internalType\":\"contract IBlast\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputZone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outputZone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"toWithdraw\",\"type\":\"bool\"}],\"internalType\":\"struct IAoriV2.Order\",\"name\":\"makerOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputZone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outputZone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"toWithdraw\",\"type\":\"bool\"}],\"internalType\":\"struct IAoriV2.Order\",\"name\":\"takerOrder\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"blockDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seatHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seatPercentOfFees\",\"type\":\"uint256\"}],\"internalType\":\"struct IAoriV2.MatchingDetails\",\"name\":\"matching\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAoriTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aoriProtocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputZone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outputZone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"toWithdraw\",\"type\":\"bool\"}],\"internalType\":\"struct IAoriV2.Order\",\"name\":\"makerOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputZone\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outputZone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"toWithdraw\",\"type\":\"bool\"}],\"internalType\":\"struct IAoriV2.Order\",\"name\":\"takerOrder\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"makerSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"blockDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seatHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seatPercentOfFees\",\"type\":\"uint256\"}],\"internalType\":\"struct IAoriV2.MatchingDetails\",\"name\":\"matching\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeAoriTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Instruction[]\",\"name\":\"instructions\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"managers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aoriProtocol\",\"type\":\"address\"}],\"name\":\"setAoriProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isManager\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AoriVaultBlast.sol\":\"AoriVaultBlast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":LayerZero-v2/=lib/aori-v2-contracts/lib/LayerZero-v2/\",\":aori-v2-contracts/=lib/aori-v2-contracts/\",\":create3-factory/=lib/create3-factory/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":seaport-types/=lib/seaport-types/\",\":solady/=lib/solady/src/\",\":solmate/=lib/aori-v2-contracts/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"contracts/AoriVaultBlast.sol\":{\"keccak256\":\"0x2aac5b279fb62c299696c95230e44d54672fe88f7efe763190b29bee06ae3f4a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://58a4ec9680e52de3d39cd1195070647cfb06a3654479f280afe8510f3926ae24\",\"dweb:/ipfs/QmPQYmLWQGE9qvoonv3RFoEjvD7nVcZMteSavvS4MZoUyb\"]},\"contracts/BatchExecutor.sol\":{\"keccak256\":\"0xcaabaf1226e4c384b2f5e8eeba95ecd6f990e40f4d76f90c0ac9f5688eadf384\",\"urls\":[\"bzz-raw://40744805dbffd6943db545be860fefc620b767f418e6238c0ced11f683172962\",\"dweb:/ipfs/Qmdsn7UgmbRf9cC4PkDB7K8FPm9z9SaTvnQcZha8oG9Qff\"]},\"contracts/interfaces/IAoriVault.sol\":{\"keccak256\":\"0xf2a0fd7076fd916fb8c777be5845bf976dc7724fed22a0c6a46d793f44fcbeba\",\"urls\":[\"bzz-raw://053eb93eb95a902a5e63d418d43bc6e28fe376185726a62ec6fbece1f84a011a\",\"dweb:/ipfs/QmbDicQFWsvVLnB6WKqXQd8N5GofSDdcKbkMzeY1GYYpRJ\"]},\"contracts/interfaces/IBatchExecutor.sol\":{\"keccak256\":\"0x195aa243c1befdf3db3dc154e23a239339ddb0ec9aca06f02ac14eab89f4050b\",\"urls\":[\"bzz-raw://6660feb81655afb3c2cd62f482daccb8d344f0adf28bd0ee190b37705cad3181\",\"dweb:/ipfs/QmWDNHNUiV4ZfKct7xJKc91FmLeesAp8u3akXiQT1GUHDG\"]},\"lib/aori-v2-contracts/src/interfaces/IAoriHook.sol\":{\"keccak256\":\"0xc4bd7a35c6e514ba22c3160868928924f22b9df3ab0f5c3ebbb3ebb039361c6b\",\"urls\":[\"bzz-raw://d8b5fff115f14c357863df196ace76eb7474fd59d70a63bfe201e67328309ce5\",\"dweb:/ipfs/QmaiFSvvvm1pUtnkmvBfwMtH47PygjS4cGvfvMrPuxkv8N\"]},\"lib/aori-v2-contracts/src/interfaces/IAoriV2.sol\":{\"keccak256\":\"0x3446a6e5d3da9af32f4835209be90b9cab5b6a6b0d93cc4ad0da6dc14bf2da22\",\"urls\":[\"bzz-raw://546a00158e6270431ac38d9a0fbfd7c43867c63dbb1cb3ac9c147c03efc203b0\",\"dweb:/ipfs/QmNPpG8wHG2RDXD8i95dq8Z6zqi2su4M7oLkCz7jQ1fZuc\"]},\"lib/aori-v2-contracts/src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0896b47d7646823e377ee55e8190151d5ab89f326033e411bf9deb5f2596749d\",\"urls\":[\"bzz-raw://2a4e63afd76c15ea78a2930bfdb6c6048f954289c6de893339bf7232b82c62b7\",\"dweb:/ipfs/Qmcm3mbTBUQFHmZUYpVxhs3GDM4nV9WbckcxYJ5BQkJJGF\"]},\"lib/aori-v2-contracts/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x35338d78ebfa80cb07425c046b7dddbdc4b8d54ac95b5527b6650266420541fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59439cebc4af82bdccd6eb9607455b7f209ae3d2770d2b9a8ae3b7a63205270c\",\"dweb:/ipfs/QmZuJFyhKk6rJYkVTh55r7K916JfT6ueg3Xf25tNezKgHx\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_aoriProtocol",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Call",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BLAST",
          "outputs": [
            {
              "internalType": "contract IBlast",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAoriV2.MatchingDetails",
              "name": "matching",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IAoriV2.Order",
                  "name": "makerOrder",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "inputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "outputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "outputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "toWithdraw",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "struct IAoriV2.Order",
                  "name": "takerOrder",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "inputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "outputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "outputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "toWithdraw",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "makerSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "takerSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "blockDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "seatNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seatHolder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "seatPercentOfFees",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterAoriTrade",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "aoriProtocol",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAoriV2.MatchingDetails",
              "name": "matching",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IAoriV2.Order",
                  "name": "makerOrder",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "inputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "outputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "outputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "toWithdraw",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "struct IAoriV2.Order",
                  "name": "takerOrder",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "offerer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "inputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "outputToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputChainId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "outputZone",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "salt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "counter",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "toWithdraw",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "makerSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "takerSignature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "blockDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "seatNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seatHolder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "seatPercentOfFees",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeAoriTrade",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Instruction[]",
              "name": "instructions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "managers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_aoriProtocol",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAoriProtocol"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isManager",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setManager"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAll"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isValidSignature(bytes32,bytes)": {
            "details": "Should return whether the signature provided is valid for the provided hash",
            "params": {
              "_hash": "Hash of the data to be signed",
              "_signature": "Signature byte array associated with _hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":LayerZero-v2/=lib/aori-v2-contracts/lib/LayerZero-v2/",
        ":aori-v2-contracts/=lib/aori-v2-contracts/",
        ":create3-factory/=lib/create3-factory/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":seaport-types/=lib/seaport-types/",
        ":solady/=lib/solady/src/",
        ":solmate/=lib/aori-v2-contracts/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/AoriVaultBlast.sol": "AoriVaultBlast"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/AoriVaultBlast.sol": {
        "keccak256": "0x2aac5b279fb62c299696c95230e44d54672fe88f7efe763190b29bee06ae3f4a",
        "urls": [
          "bzz-raw://58a4ec9680e52de3d39cd1195070647cfb06a3654479f280afe8510f3926ae24",
          "dweb:/ipfs/QmPQYmLWQGE9qvoonv3RFoEjvD7nVcZMteSavvS4MZoUyb"
        ],
        "license": "UNLICENSED"
      },
      "contracts/BatchExecutor.sol": {
        "keccak256": "0xcaabaf1226e4c384b2f5e8eeba95ecd6f990e40f4d76f90c0ac9f5688eadf384",
        "urls": [
          "bzz-raw://40744805dbffd6943db545be860fefc620b767f418e6238c0ced11f683172962",
          "dweb:/ipfs/Qmdsn7UgmbRf9cC4PkDB7K8FPm9z9SaTvnQcZha8oG9Qff"
        ],
        "license": null
      },
      "contracts/interfaces/IAoriVault.sol": {
        "keccak256": "0xf2a0fd7076fd916fb8c777be5845bf976dc7724fed22a0c6a46d793f44fcbeba",
        "urls": [
          "bzz-raw://053eb93eb95a902a5e63d418d43bc6e28fe376185726a62ec6fbece1f84a011a",
          "dweb:/ipfs/QmbDicQFWsvVLnB6WKqXQd8N5GofSDdcKbkMzeY1GYYpRJ"
        ],
        "license": null
      },
      "contracts/interfaces/IBatchExecutor.sol": {
        "keccak256": "0x195aa243c1befdf3db3dc154e23a239339ddb0ec9aca06f02ac14eab89f4050b",
        "urls": [
          "bzz-raw://6660feb81655afb3c2cd62f482daccb8d344f0adf28bd0ee190b37705cad3181",
          "dweb:/ipfs/QmWDNHNUiV4ZfKct7xJKc91FmLeesAp8u3akXiQT1GUHDG"
        ],
        "license": null
      },
      "lib/aori-v2-contracts/src/interfaces/IAoriHook.sol": {
        "keccak256": "0xc4bd7a35c6e514ba22c3160868928924f22b9df3ab0f5c3ebbb3ebb039361c6b",
        "urls": [
          "bzz-raw://d8b5fff115f14c357863df196ace76eb7474fd59d70a63bfe201e67328309ce5",
          "dweb:/ipfs/QmaiFSvvvm1pUtnkmvBfwMtH47PygjS4cGvfvMrPuxkv8N"
        ],
        "license": null
      },
      "lib/aori-v2-contracts/src/interfaces/IAoriV2.sol": {
        "keccak256": "0x3446a6e5d3da9af32f4835209be90b9cab5b6a6b0d93cc4ad0da6dc14bf2da22",
        "urls": [
          "bzz-raw://546a00158e6270431ac38d9a0fbfd7c43867c63dbb1cb3ac9c147c03efc203b0",
          "dweb:/ipfs/QmNPpG8wHG2RDXD8i95dq8Z6zqi2su4M7oLkCz7jQ1fZuc"
        ],
        "license": null
      },
      "lib/aori-v2-contracts/src/interfaces/IERC1271.sol": {
        "keccak256": "0x0896b47d7646823e377ee55e8190151d5ab89f326033e411bf9deb5f2596749d",
        "urls": [
          "bzz-raw://2a4e63afd76c15ea78a2930bfdb6c6048f954289c6de893339bf7232b82c62b7",
          "dweb:/ipfs/Qmcm3mbTBUQFHmZUYpVxhs3GDM4nV9WbckcxYJ5BQkJJGF"
        ],
        "license": null
      },
      "lib/aori-v2-contracts/src/interfaces/IERC165.sol": {
        "keccak256": "0x35338d78ebfa80cb07425c046b7dddbdc4b8d54ac95b5527b6650266420541fc",
        "urls": [
          "bzz-raw://59439cebc4af82bdccd6eb9607455b7f209ae3d2770d2b9a8ae3b7a63205270c",
          "dweb:/ipfs/QmZuJFyhKk6rJYkVTh55r7K916JfT6ueg3Xf25tNezKgHx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/AoriVaultBlast.sol",
    "id": 528,
    "exportedSymbols": {
      "AoriVaultBlast": [
        527
      ],
      "BatchExecutor": [
        723
      ],
      "IAoriV2": [
        2193
      ],
      "IAoriVault": [
        773
      ],
      "IBlast": [
        269
      ],
      "Instruction": [
        782
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4498:1",
    "nodes": [
      {
        "id": 252,
        "nodeType": "PragmaDirective",
        "src": "39:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 254,
        "nodeType": "ImportDirective",
        "src": "64:57:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IAoriVault.sol",
        "file": "./interfaces/IAoriVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 528,
        "sourceUnit": 774,
        "symbolAliases": [
          {
            "foreign": {
              "id": 253,
              "name": "IAoriVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 773,
              "src": "73:10:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 256,
        "nodeType": "ImportDirective",
        "src": "122:71:1",
        "nodes": [],
        "absolutePath": "lib/aori-v2-contracts/src/interfaces/IAoriV2.sol",
        "file": "aori-v2-contracts/src/interfaces/IAoriV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 528,
        "sourceUnit": 2194,
        "symbolAliases": [
          {
            "foreign": {
              "id": 255,
              "name": "IAoriV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2193,
              "src": "131:7:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 258,
        "nodeType": "ImportDirective",
        "src": "194:62:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IBatchExecutor.sol",
        "file": "./interfaces/IBatchExecutor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 528,
        "sourceUnit": 805,
        "symbolAliases": [
          {
            "foreign": {
              "id": 257,
              "name": "Instruction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 782,
              "src": "203:11:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 260,
        "nodeType": "ImportDirective",
        "src": "257:52:1",
        "nodes": [],
        "absolutePath": "contracts/BatchExecutor.sol",
        "file": "./BatchExecutor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 528,
        "sourceUnit": 724,
        "symbolAliases": [
          {
            "foreign": {
              "id": 259,
              "name": "BatchExecutor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 723,
              "src": "266:13:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 269,
        "nodeType": "ContractDefinition",
        "src": "311:122:1",
        "nodes": [
          {
            "id": 263,
            "nodeType": "FunctionDefinition",
            "src": "332:42:1",
            "nodes": [],
            "functionSelector": "4e606c47",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "configureClaimableGas",
            "nameLocation": "341:21:1",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:2:1"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:0:1"
            },
            "scope": 269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 268,
            "nodeType": "FunctionDefinition",
            "src": "377:54:1",
            "nodes": [],
            "functionSelector": "eb864698",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "configureGovernor",
            "nameLocation": "386:17:1",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "governor",
                  "nameLocation": "412:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "404:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:18:1"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:0:1"
            },
            "scope": 269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBlast",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          269
        ],
        "name": "IBlast",
        "nameLocation": "321:6:1",
        "scope": 528,
        "usedErrors": []
      },
      {
        "id": 527,
        "nodeType": "ContractDefinition",
        "src": "435:4102:1",
        "nodes": [
          {
            "id": 276,
            "nodeType": "VariableDeclaration",
            "src": "554:56:1",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ERC1271_MAGICVALUE",
            "nameLocation": "579:18:1",
            "scope": 527,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 274,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "554:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783136323662613765",
              "id": 275,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "600:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_371636862_by_1",
                "typeString": "int_const 371636862"
              },
              "value": "0x1626ba7e"
            },
            "visibility": "internal"
          },
          {
            "id": 282,
            "nodeType": "VariableDeclaration",
            "src": "616:81:1",
            "nodes": [],
            "constant": true,
            "functionSelector": "97d75776",
            "mutability": "constant",
            "name": "BLAST",
            "nameLocation": "639:5:1",
            "scope": 527,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBlast_$269",
              "typeString": "contract IBlast"
            },
            "typeName": {
              "id": 278,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 277,
                "name": "IBlast",
                "nameLocations": [
                  "616:6:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 269,
                "src": "616:6:1"
              },
              "referencedDeclaration": 269,
              "src": "616:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBlast_$269",
                "typeString": "contract IBlast"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834333030303030303030303030303030303030303030303030303030303030303030303030303032",
                  "id": 280,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "654:42:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x4300000000000000000000000000000000000002"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 279,
                "name": "IBlast",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 269,
                "src": "647:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IBlast_$269_$",
                  "typeString": "type(contract IBlast)"
                }
              },
              "id": 281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "647:50:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBlast_$269",
                "typeString": "contract IBlast"
              }
            },
            "visibility": "public"
          },
          {
            "id": 284,
            "nodeType": "VariableDeclaration",
            "src": "891:27:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "f11b9f15",
            "mutability": "mutable",
            "name": "aoriProtocol",
            "nameLocation": "906:12:1",
            "scope": 527,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 283,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "891:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 310,
            "nodeType": "FunctionDefinition",
            "src": "1106:221:1",
            "nodes": [],
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "1201:126:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 294,
                      "name": "aoriProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "1211:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 295,
                      "name": "_aoriProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "1226:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1211:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:28:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 298,
                        "name": "BLAST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "1250:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBlast_$269",
                          "typeString": "contract IBlast"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1256:21:1",
                      "memberName": "configureClaimableGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 263,
                      "src": "1250:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "1250:29:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 306,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "1313:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 303,
                        "name": "BLAST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "1289:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBlast_$269",
                          "typeString": "contract IBlast"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1295:17:1",
                      "memberName": "configureGovernor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 268,
                      "src": "1289:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:31:1"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 291,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 286,
                    "src": "1193:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 292,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 290,
                  "name": "BatchExecutor",
                  "nameLocations": [
                    "1179:13:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 723,
                  "src": "1179:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1179:21:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1135:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "1127:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_aoriProtocol",
                  "nameLocation": "1159:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "1151:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1151:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1117:61:1"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1201:0:1"
            },
            "scope": 527,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 366,
            "nodeType": "FunctionDefinition",
            "src": "1511:557:1",
            "nodes": [],
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "1628:440:1",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 320,
                        "name": "hookData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "1642:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1651:6:1",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1642:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1661:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1642:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "nodeType": "IfStatement",
                  "src": "1638:62:1",
                  "trueBody": {
                    "id": 326,
                    "nodeType": "Block",
                    "src": "1664:36:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1685:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 319,
                        "id": 325,
                        "nodeType": "Return",
                        "src": "1678:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 329,
                          "name": "managers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "1718:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 332,
                        "indexExpression": {
                          "expression": {
                            "id": 330,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "1727:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1730:6:1",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "1727:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1718:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061206d616e616765722063616e20666f7263652074686520657865637574696f6e206f662074686973207472616465",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1739:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96a0ab5a3c38144fddd5430f9c6ab0c877e41ffc1c0ba56aa71ff286414defd",
                          "typeString": "literal_string \"Only a manager can force the execution of this trade\""
                        },
                        "value": "Only a manager can force the execution of this trade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96a0ab5a3c38144fddd5430f9c6ab0c877e41ffc1c0ba56aa71ff286414defd",
                          "typeString": "literal_string \"Only a manager can force the execution of this trade\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1710:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1710:84:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "1710:84:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 337,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1812:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1816:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1812:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 339,
                          "name": "aoriProtocol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "1826:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1812:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616f726950726f746f636f6c2063616e20696e7465726163742077697468207468697320636f6e7472616374",
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1840:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88df60a177765981c64fa1b940747f7763c0c5faea3335977a4c5f66ae8d169c",
                          "typeString": "literal_string \"Only aoriProtocol can interact with this contract\""
                        },
                        "value": "Only aoriProtocol can interact with this contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88df60a177765981c64fa1b940747f7763c0c5faea3335977a4c5f66ae8d169c",
                          "typeString": "literal_string \"Only aoriProtocol can interact with this contract\""
                        }
                      ],
                      "id": 336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1804:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1804:88:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:88:1"
                },
                {
                  "assignments": [
                    348,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 348,
                      "mutability": "mutable",
                      "name": "preSwapInstructions",
                      "nameLocation": "1925:19:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "1904:40:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Instruction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 346,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 345,
                            "name": "Instruction",
                            "nameLocations": [
                              "1904:11:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 782,
                            "src": "1904:11:1"
                          },
                          "referencedDeclaration": 782,
                          "src": "1904:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Instruction_$782_storage_ptr",
                            "typeString": "struct Instruction"
                          }
                        },
                        "id": 347,
                        "nodeType": "ArrayTypeName",
                        "src": "1904:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$782_storage_$dyn_storage_ptr",
                          "typeString": "struct Instruction[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 358,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 351,
                        "name": "hookData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "1960:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 352,
                              "name": "Instruction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "1971:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Instruction_$782_storage_ptr_$",
                                "typeString": "type(struct Instruction storage pointer)"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1971:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Instruction memory[] memory)"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 354,
                              "name": "Instruction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "1986:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Instruction_$782_storage_ptr_$",
                                "typeString": "type(struct Instruction storage pointer)"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1986:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Instruction memory[] memory)"
                            }
                          }
                        ],
                        "id": 356,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1970:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(struct Instruction memory[] memory),type(struct Instruction memory[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(struct Instruction memory[] memory),type(struct Instruction memory[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 349,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1949:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1953:6:1",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1949:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1949:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Instruction memory[] memory,struct Instruction memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1903:98:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 360,
                        "name": "preSwapInstructions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "2020:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Instruction memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Instruction memory[] memory"
                        }
                      ],
                      "id": 359,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "2011:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct Instruction memory[] memory)"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:29:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2057:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 319,
                  "id": 364,
                  "nodeType": "Return",
                  "src": "2050:11:1"
                }
              ]
            },
            "baseFunctions": [
              753
            ],
            "functionSelector": "7ad28a59",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeAoriTrade",
            "nameLocation": "1520:15:1",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "matching",
                  "nameLocation": "1569:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "1536:41:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchingDetails_$2077_calldata_ptr",
                    "typeString": "struct IAoriV2.MatchingDetails"
                  },
                  "typeName": {
                    "id": 312,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 311,
                      "name": "IAoriV2.MatchingDetails",
                      "nameLocations": [
                        "1536:7:1",
                        "1544:15:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2077,
                      "src": "1536:23:1"
                    },
                    "referencedDeclaration": 2077,
                    "src": "1536:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchingDetails_$2077_storage_ptr",
                      "typeString": "struct IAoriV2.MatchingDetails"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "hookData",
                  "nameLocation": "1594:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "1579:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1535:68:1"
            },
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "1622:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1622:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1621:6:1"
            },
            "scope": 527,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 422,
            "nodeType": "FunctionDefinition",
            "src": "2074:537:1",
            "nodes": [],
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "2190:421:1",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 376,
                        "name": "hookData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "2204:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2213:6:1",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2204:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2223:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2204:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 383,
                  "nodeType": "IfStatement",
                  "src": "2200:62:1",
                  "trueBody": {
                    "id": 382,
                    "nodeType": "Block",
                    "src": "2226:36:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2247:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 375,
                        "id": 381,
                        "nodeType": "Return",
                        "src": "2240:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 385,
                          "name": "managers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "2280:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 388,
                        "indexExpression": {
                          "expression": {
                            "id": 386,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "2289:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2292:6:1",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "2289:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2280:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061206d616e616765722063616e20666f7263652074686520657865637574696f6e206f662074686973207472616465",
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2301:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96a0ab5a3c38144fddd5430f9c6ab0c877e41ffc1c0ba56aa71ff286414defd",
                          "typeString": "literal_string \"Only a manager can force the execution of this trade\""
                        },
                        "value": "Only a manager can force the execution of this trade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96a0ab5a3c38144fddd5430f9c6ab0c877e41ffc1c0ba56aa71ff286414defd",
                          "typeString": "literal_string \"Only a manager can force the execution of this trade\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2272:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:84:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:84:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 393,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2374:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2378:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2374:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 395,
                          "name": "aoriProtocol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "2388:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2374:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616f726950726f746f636f6c2063616e207472616465",
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2402:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d06a134a62a7efc0007387f8c3a1db7e04eabfab483ba6bf581f79aec521826",
                          "typeString": "literal_string \"Only aoriProtocol can trade\""
                        },
                        "value": "Only aoriProtocol can trade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d06a134a62a7efc0007387f8c3a1db7e04eabfab483ba6bf581f79aec521826",
                          "typeString": "literal_string \"Only aoriProtocol can trade\""
                        }
                      ],
                      "id": 392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2366:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2366:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:66:1"
                },
                {
                  "assignments": [
                    null,
                    404
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "postSwapInstructions",
                      "nameLocation": "2467:20:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "2446:41:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Instruction[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 402,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 401,
                            "name": "Instruction",
                            "nameLocations": [
                              "2446:11:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 782,
                            "src": "2446:11:1"
                          },
                          "referencedDeclaration": 782,
                          "src": "2446:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Instruction_$782_storage_ptr",
                            "typeString": "struct Instruction"
                          }
                        },
                        "id": 403,
                        "nodeType": "ArrayTypeName",
                        "src": "2446:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$782_storage_$dyn_storage_ptr",
                          "typeString": "struct Instruction[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 407,
                        "name": "hookData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "2502:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 408,
                              "name": "Instruction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "2513:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Instruction_$782_storage_ptr_$",
                                "typeString": "type(struct Instruction storage pointer)"
                              }
                            },
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2513:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Instruction memory[] memory)"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 410,
                              "name": "Instruction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "2528:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Instruction_$782_storage_ptr_$",
                                "typeString": "type(struct Instruction storage pointer)"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2528:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Instruction memory[] memory)"
                            }
                          }
                        ],
                        "id": 412,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2512:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(struct Instruction memory[] memory),type(struct Instruction memory[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(struct Instruction memory[] memory),type(struct Instruction memory[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 405,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2491:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2495:6:1",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2491:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Instruction memory[] memory,struct Instruction memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2443:100:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 416,
                        "name": "postSwapInstructions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "2562:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Instruction memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Instruction memory[] memory"
                        }
                      ],
                      "id": 415,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "2553:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Instruction_$782_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct Instruction memory[] memory)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:30:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2600:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 375,
                  "id": 420,
                  "nodeType": "Return",
                  "src": "2593:11:1"
                }
              ]
            },
            "baseFunctions": [
              763
            ],
            "functionSelector": "a9cfc240",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterAoriTrade",
            "nameLocation": "2083:14:1",
            "parameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "matching",
                  "nameLocation": "2131:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "2098:41:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchingDetails_$2077_calldata_ptr",
                    "typeString": "struct IAoriV2.MatchingDetails"
                  },
                  "typeName": {
                    "id": 368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 367,
                      "name": "IAoriV2.MatchingDetails",
                      "nameLocations": [
                        "2098:7:1",
                        "2106:15:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2077,
                      "src": "2098:23:1"
                    },
                    "referencedDeclaration": 2077,
                    "src": "2098:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchingDetails_$2077_storage_ptr",
                      "typeString": "struct IAoriV2.MatchingDetails"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "hookData",
                  "nameLocation": "2156:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "2141:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2097:68:1"
            },
            "returnParameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "2184:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2183:6:1"
            },
            "scope": 527,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 486,
            "nodeType": "FunctionDefinition",
            "src": "2797:1127:1",
            "nodes": [],
            "body": {
              "id": 485,
              "nodeType": "Block",
              "src": "2892:1032:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 432,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "2910:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2921:6:1",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2910:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2931:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "2910:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2902:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2902:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "2902:32:1"
                },
                {
                  "assignments": [
                    439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 439,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "3001:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 485,
                      "src": "2995:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 438,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2995:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 440,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2995:7:1"
                },
                {
                  "assignments": [
                    442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 442,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "3020:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 485,
                      "src": "3012:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 441,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3012:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 443,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3012:9:1"
                },
                {
                  "assignments": [
                    445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 445,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "3039:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 485,
                      "src": "3031:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 444,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3031:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 446,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3031:9:1"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3059:301:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3129:31:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "3144:10:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3156:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3140:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3140:19:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3134:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3134:26:1"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "3129:1:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3205:31:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "3220:10:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3232:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3216:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3216:19:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3210:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3210:26:1"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "3205:1:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3310:40:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3320:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "3333:10:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3345:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3329:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3329:19:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3323:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3323:26:1"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "3315:4:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3315:35:1"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "3310:1:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 426,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3144:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 426,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3220:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 426,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3333:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 442,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3129:1:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 445,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3205:1:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 439,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3310:1:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 447,
                  "nodeType": "InlineAssembly",
                  "src": "3050:310:1"
                },
                {
                  "assignments": [
                    449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 449,
                      "mutability": "mutable",
                      "name": "ethSignSigner",
                      "nameLocation": "3378:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 485,
                      "src": "3370:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 448,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3370:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 451,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "3404:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 452,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "3411:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 453,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "3414:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 454,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "3417:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 450,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "3394:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3394:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3370:49:1"
                },
                {
                  "assignments": [
                    458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "mutability": "mutable",
                      "name": "eip1271Signer",
                      "nameLocation": "3512:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 485,
                      "src": "3504:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 457,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3504:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 471,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3616:34:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                  "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                },
                                "value": "\u0019Ethereum Signed Message:\n32"
                              },
                              {
                                "id": 464,
                                "name": "_hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 424,
                                "src": "3672:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                  "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 461,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3578:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3582:12:1",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3578:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3578:117:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 460,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3551:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3551:158:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 467,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "3711:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 468,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "3714:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 469,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "3717:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 459,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "3528:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:191:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3504:215:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 472,
                        "name": "managers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "3795:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 474,
                      "indexExpression": {
                        "id": 473,
                        "name": "ethSignSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "3804:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3795:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 475,
                        "name": "managers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "3822:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 477,
                      "indexExpression": {
                        "id": 476,
                        "name": "eip1271Signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "3831:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3822:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3795:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 482,
                  "nodeType": "IfStatement",
                  "src": "3791:106:1",
                  "trueBody": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "3847:50:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 479,
                          "name": "ERC1271_MAGICVALUE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "3868:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 430,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "3861:25:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "307830",
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3914:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x0"
                  },
                  "functionReturnParameters": 430,
                  "id": 484,
                  "nodeType": "Return",
                  "src": "3907:10:1"
                }
              ]
            },
            "baseFunctions": [
              772
            ],
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "2806:16:1",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "2831:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "2823:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2823:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "2851:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "2838:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2822:40:1"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "2884:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2883:8:1"
            },
            "scope": 527,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 508,
            "nodeType": "FunctionDefinition",
            "src": "4109:232:1",
            "nodes": [],
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "4184:157:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 493,
                            "name": "_interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "4214:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 494,
                                "name": "IAoriVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "4230:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAoriVault_$773_$",
                                  "typeString": "type(contract IAoriVault)"
                                }
                              },
                              "id": 495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4241:15:1",
                              "memberName": "beforeAoriTrade",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 753,
                              "src": "4230:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_MatchingDetails_$2077_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function IAoriVault.beforeAoriTrade(struct IAoriV2.MatchingDetails calldata,bytes calldata) returns (bool)"
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4257:8:1",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4230:35:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "4214:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 498,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4213:53:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 499,
                            "name": "_interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "4283:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 500,
                                "name": "IAoriVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "4299:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAoriVault_$773_$",
                                  "typeString": "type(contract IAoriVault)"
                                }
                              },
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4310:14:1",
                              "memberName": "afterAoriTrade",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 763,
                              "src": "4299:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_MatchingDetails_$2077_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function IAoriVault.afterAoriTrade(struct IAoriV2.MatchingDetails calldata,bytes calldata) returns (bool)"
                              }
                            },
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4325:8:1",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4299:34:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "4283:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 504,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4282:52:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4213:121:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 492,
                  "id": 506,
                  "nodeType": "Return",
                  "src": "4194:140:1"
                }
              ]
            },
            "baseFunctions": [
              2217
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4118:17:1",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "4143:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "4136:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4136:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4135:21:1"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "4178:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4178:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4177:6:1"
            },
            "scope": 527,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 526,
            "nodeType": "FunctionDefinition",
            "src": "4347:188:1",
            "nodes": [],
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "4404:131:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 514,
                          "name": "managers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "4422:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 517,
                        "indexExpression": {
                          "expression": {
                            "id": 515,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4431:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4435:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4431:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4422:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2073657420746865206e657720616f726950726f746f636f6c",
                        "id": 518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4444:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cfca9b0db833b910c80b166dfba2def6137b66594820a4c4379a89bfaa2c70f",
                          "typeString": "literal_string \"Only the owner can set the new aoriProtocol\""
                        },
                        "value": "Only the owner can set the new aoriProtocol"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cfca9b0db833b910c80b166dfba2def6137b66594820a4c4379a89bfaa2c70f",
                          "typeString": "literal_string \"Only the owner can set the new aoriProtocol\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4414:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4414:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "4414:76:1"
                },
                {
                  "expression": {
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 521,
                      "name": "aoriProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "4500:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 522,
                      "name": "_aoriProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "4515:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4500:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "4500:28:1"
                }
              ]
            },
            "functionSelector": "6cd2bc88",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAoriProtocol",
            "nameLocation": "4356:15:1",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "_aoriProtocol",
                  "nameLocation": "4380:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "4372:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4371:23:1"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4404:0:1"
            },
            "scope": 527,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 270,
              "name": "IAoriVault",
              "nameLocations": [
                "462:10:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 773,
              "src": "462:10:1"
            },
            "id": 271,
            "nodeType": "InheritanceSpecifier",
            "src": "462:10:1"
          },
          {
            "baseName": {
              "id": 272,
              "name": "BatchExecutor",
              "nameLocations": [
                "474:13:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 723,
              "src": "474:13:1"
            },
            "id": 273,
            "nodeType": "InheritanceSpecifier",
            "src": "474:13:1"
          }
        ],
        "canonicalName": "AoriVaultBlast",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          527,
          723,
          773,
          804,
          2027,
          2218,
          2206
        ],
        "name": "AoriVaultBlast",
        "nameLocation": "444:14:1",
        "scope": 528,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 1
}